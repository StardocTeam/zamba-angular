function windowWidth() { var y = 0; return "number" == typeof window.innerWidth ? y = window.innerWidth : document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight) ? y = document.documentElement.clientWidth : document.body && (document.body.clientWidth || document.body.clientHeight) && (y = document.body.clientWidth), y } function reloadBootstrap() { var y; y = location.origin; var d = document.createElement("script"); d.type = "text/javascript", d.src = y + "/bpm/scripts/bootstrap.min.js", $("head").append(d) } function xml2json(y) { try { var d = {}; if (void 0 == y.children) return y.childNodes[0].firstChild.data; if (y.children.length > 0) for (var t = 0; t < y.children.length; t++) { var e = y.children.item(t), M = e.nodeName; if (void 0 === d[M]) d[M] = xml2json(e); else { if (void 0 === d[M].push) { var n = d[M]; d[M] = [], d[M].push(n) } d[M].push(xml2json(e)) } } else d = y.textContent; return "object" == typeof d ? d.string : d } catch (y) { console.log(y.message) } } function isDate(y) { var d = new Date(y); return !isNaN(d.valueOf()) } function esToEnDate(y) { var d = y.indexOf("/") ? "/" : "-", t = y.substring(0, y.indexOf(d)); return y.substring(0, y.lastIndexOf(d)).substring(t.length + 1) + d + t + d + y.substring(y.length - 2) } function GetImgIcon(y) { return null != y ? "Images/icons/" + y + ".png" : "Images/icons/30.png" } function browserType() { var y = { init: function () { this.browser = this.searchString(this.dataBrowser) || "Other", this.version = this.searchVersion(navigator.userAgent) || this.searchVersion(navigator.appVersion) || "Unknown" }, searchString: function (y) { for (var d = 0; d < y.length; d++) { var t = y[d].string; if (this.versionSearchString = y[d].subString, -1 !== t.indexOf(y[d].subString)) return y[d].identity } }, searchVersion: function (y) { var d = y.indexOf(this.versionSearchString); if (-1 !== d) { var t = y.indexOf("rv:"); return "Trident" === this.versionSearchString && -1 !== t ? parseFloat(y.substring(t + 3)) : parseFloat(y.substring(d + this.versionSearchString.length + 1)) } }, dataBrowser: [{ string: navigator.userAgent, subString: "Edge", identity: "MS Edge" }, { string: navigator.userAgent, subString: "MSIE", identity: "Explorer" }, { string: navigator.userAgent, subString: "Trident", identity: "Explorer" }, { string: navigator.userAgent, subString: "Firefox", identity: "Firefox" }, { string: navigator.userAgent, subString: "Opera", identity: "Opera" }, { string: navigator.userAgent, subString: "OPR", identity: "Opera" }, { string: navigator.userAgent, subString: "Chrome", identity: "Chrome" }, { string: navigator.userAgent, subString: "Safari", identity: "Safari" }] }; return y.init(), y.browser.toLowerCase() } function getLocaleShortDateString(y) { var d = { "ar-SA": "dd/MM/yy", "bg-BG": "dd.M.yyyy", "ca-ES": "dd/MM/yyyy", "zh-TW": "yyyy/M/d", "cs-CZ": "d.M.yyyy", "da-DK": "dd-MM-yyyy", "de-DE": "dd.MM.yyyy", "el-GR": "d/M/yyyy", "en-US": "M/d/yyyy", "fi-FI": "d.M.yyyy", "fr-FR": "dd/MM/yyyy", "he-IL": "dd/MM/yyyy", "hu-HU": "yyyy. MM. dd.", "is-IS": "d.M.yyyy", "it-IT": "dd/MM/yyyy", "ja-JP": "yyyy/MM/dd", "ko-KR": "yyyy-MM-dd", "nl-NL": "d-M-yyyy", "nb-NO": "dd.MM.yyyy", "pl-PL": "yyyy-MM-dd", "pt-BR": "d/M/yyyy", "ro-RO": "dd.MM.yyyy", "ru-RU": "dd.MM.yyyy", "hr-HR": "d.M.yyyy", "sk-SK": "d. M. yyyy", "sq-AL": "yyyy-MM-dd", "sv-SE": "yyyy-MM-dd", "th-TH": "d/M/yyyy", "tr-TR": "dd.MM.yyyy", "ur-PK": "dd/MM/yyyy", "id-ID": "dd/MM/yyyy", "uk-UA": "dd.MM.yyyy", "be-BY": "dd.MM.yyyy", "sl-SI": "d.M.yyyy", "et-EE": "d.MM.yyyy", "lv-LV": "yyyy.MM.dd.", "lt-LT": "yyyy.MM.dd", "fa-IR": "MM/dd/yyyy", "vi-VN": "dd/MM/yyyy", "hy-AM": "dd.MM.yyyy", "az-Latn-AZ": "dd.MM.yyyy", "eu-ES": "yyyy/MM/dd", "mk-MK": "dd.MM.yyyy", "af-ZA": "yyyy/MM/dd", "ka-GE": "dd.MM.yyyy", "fo-FO": "dd-MM-yyyy", "hi-IN": "dd-MM-yyyy", "ms-MY": "dd/MM/yyyy", "kk-KZ": "dd.MM.yyyy", "ky-KG": "dd.MM.yy", "sw-KE": "M/d/yyyy", "uz-Latn-UZ": "dd/MM yyyy", "tt-RU": "dd.MM.yyyy", "pa-IN": "dd-MM-yy", "gu-IN": "dd-MM-yy", "ta-IN": "dd-MM-yyyy", "te-IN": "dd-MM-yy", "kn-IN": "dd-MM-yy", "mr-IN": "dd-MM-yyyy", "sa-IN": "dd-MM-yyyy", "mn-MN": "yy.MM.dd", "gl-ES": "dd/MM/yy", "kok-IN": "dd-MM-yyyy", "syr-SY": "dd/MM/yyyy", "dv-MV": "dd/MM/yy", "ar-IQ": "dd/MM/yyyy", "zh-CN": "yyyy/M/d", "de-CH": "dd.MM.yyyy", "en-GB": "dd/MM/yyyy", "es-MX": "dd/MM/yyyy", "fr-BE": "d/MM/yyyy", "it-CH": "dd.MM.yyyy", "nl-BE": "d/MM/yyyy", "nn-NO": "dd.MM.yyyy", "pt-PT": "dd-MM-yyyy", "sr-Latn-CS": "d.M.yyyy", "sv-FI": "d.M.yyyy", "az-Cyrl-AZ": "dd.MM.yyyy", "ms-BN": "dd/MM/yyyy", "uz-Cyrl-UZ": "dd.MM.yyyy", "ar-EG": "dd/MM/yyyy", "zh-HK": "d/M/yyyy", "de-AT": "dd.MM.yyyy", "en-AU": "d/MM/yyyy", "es-ES": "dd/MM/yyyy", "fr-CA": "yyyy-MM-dd", "sr-Cyrl-CS": "d.M.yyyy", "ar-LY": "dd/MM/yyyy", "zh-SG": "d/M/yyyy", "de-LU": "dd.MM.yyyy", "en-CA": "dd/MM/yyyy", "es-GT": "dd/MM/yyyy", "fr-CH": "dd.MM.yyyy", "ar-DZ": "dd-MM-yyyy", "zh-MO": "d/M/yyyy", "de-LI": "dd.MM.yyyy", "en-NZ": "d/MM/yyyy", "es-CR": "dd/MM/yyyy", "fr-LU": "dd/MM/yyyy", "ar-MA": "dd-MM-yyyy", "en-IE": "dd/MM/yyyy", "es-PA": "MM/dd/yyyy", "fr-MC": "dd/MM/yyyy", "ar-TN": "dd-MM-yyyy", "en-ZA": "yyyy/MM/dd", "es-DO": "dd/MM/yyyy", "ar-OM": "dd/MM/yyyy", "en-JM": "dd/MM/yyyy", "es-VE": "dd/MM/yyyy", "ar-YE": "dd/MM/yyyy", "en-029": "MM/dd/yyyy", "es-CO": "dd/MM/yyyy", "ar-SY": "dd/MM/yyyy", "en-BZ": "dd/MM/yyyy", "es-PE": "dd/MM/yyyy", "ar-JO": "dd/MM/yyyy", "en-TT": "dd/MM/yyyy", "es-AR": "dd/MM/yyyy", "ar-LB": "dd/MM/yyyy", "en-ZW": "M/d/yyyy", "es-EC": "dd/MM/yyyy", "ar-KW": "dd/MM/yyyy", "en-PH": "M/d/yyyy", "es-CL": "dd-MM-yyyy", "ar-AE": "dd/MM/yyyy", "es-UY": "dd/MM/yyyy", "ar-BH": "dd/MM/yyyy", "es-PY": "dd/MM/yyyy", "ar-QA": "dd/MM/yyyy", "es-BO": "dd/MM/yyyy", "es-SV": "dd/MM/yyyy", "es-HN": "dd/MM/yyyy", "es-NI": "dd/MM/yyyy", "es-PR": "dd/MM/yyyy", "am-ET": "d/M/yyyy", "tzm-Latn-DZ": "dd-MM-yyyy", "iu-Latn-CA": "d/MM/yyyy", "sma-NO": "dd.MM.yyyy", "mn-Mong-CN": "yyyy/M/d", "gd-GB": "dd/MM/yyyy", "en-MY": "d/M/yyyy", "prs-AF": "dd/MM/yy", "bn-BD": "dd-MM-yy", "wo-SN": "dd/MM/yyyy", "rw-RW": "M/d/yyyy", "qut-GT": "dd/MM/yyyy", "sah-RU": "MM.dd.yyyy", "gsw-FR": "dd/MM/yyyy", "co-FR": "dd/MM/yyyy", "oc-FR": "dd/MM/yyyy", "mi-NZ": "dd/MM/yyyy", "ga-IE": "dd/MM/yyyy", "se-SE": "yyyy-MM-dd", "br-FR": "dd/MM/yyyy", "smn-FI": "d.M.yyyy", "moh-CA": "M/d/yyyy", "arn-CL": "dd-MM-yyyy", "ii-CN": "yyyy/M/d", "dsb-DE": "d. M. yyyy", "ig-NG": "d/M/yyyy", "kl-GL": "dd-MM-yyyy", "lb-LU": "dd/MM/yyyy", "ba-RU": "dd.MM.yy", "nso-ZA": "yyyy/MM/dd", "quz-BO": "dd/MM/yyyy", "yo-NG": "d/M/yyyy", "ha-Latn-NG": "d/M/yyyy", "fil-PH": "M/d/yyyy", "ps-AF": "dd/MM/yy", "fy-NL": "d-M-yyyy", "ne-NP": "M/d/yyyy", "se-NO": "dd.MM.yyyy", "iu-Cans-CA": "d/M/yyyy", "sr-Latn-RS": "d.M.yyyy", "si-LK": "yyyy-MM-dd", "sr-Cyrl-RS": "d.M.yyyy", "lo-LA": "dd/MM/yyyy", "km-KH": "yyyy-MM-dd", "cy-GB": "dd/MM/yyyy", "bo-CN": "yyyy/M/d", "sms-FI": "d.M.yyyy", "as-IN": "dd-MM-yyyy", "ml-IN": "dd-MM-yy", "en-IN": "dd-MM-yyyy", "or-IN": "dd-MM-yy", "bn-IN": "dd-MM-yy", "tk-TM": "dd.MM.yy", "bs-Latn-BA": "d.M.yyyy", "mt-MT": "dd/MM/yyyy", "sr-Cyrl-ME": "d.M.yyyy", "se-FI": "d.M.yyyy", "zu-ZA": "yyyy/MM/dd", "xh-ZA": "yyyy/MM/dd", "tn-ZA": "yyyy/MM/dd", "hsb-DE": "d. M. yyyy", "bs-Cyrl-BA": "d.M.yyyy", "tg-Cyrl-TJ": "dd.MM.yy", "sr-Latn-BA": "d.M.yyyy", "smj-NO": "dd.MM.yyyy", "rm-CH": "dd/MM/yyyy", "smj-SE": "yyyy-MM-dd", "quz-EC": "dd/MM/yyyy", "quz-PE": "dd/MM/yyyy", "hr-BA": "d.M.yyyy.", "sr-Latn-ME": "d.M.yyyy", "sma-SE": "yyyy-MM-dd", "en-SG": "d/M/yyyy", "ug-CN": "yyyy-M-d", "sr-Cyrl-BA": "d.M.yyyy", "es-US": "M/d/yyyy" }, t = navigator.language ? navigator.language : navigator.userLanguage, e = y.getFullYear(), M = y.getMonth() + 1; y = y.getDate(); function n(y) { return (y = "" + y).length > 1 ? y : "0" + y } return d = (d = (d = (d = (d = (d = (d = t in d ? d[t] : "dd/MM/yyyy").replace(/yyyy/, e)).replace(/yy/, String(e).substr(2))).replace(/MM/, n(M))).replace(/M/, M)).replace(/dd/, n(y))).replace(/d/, y) } function hasAttr(y, d) { return void 0 !== $(y).attr(d) && !1 !== $(y).attr(d) } history.pushState(null, document.title, location.href), window.location.hash = "Zamba", window.location.hash = "Zamba/", $.datepicker.regional.es = { closeText: "Cerrar", prevText: "<Ant", nextText: "Sig>", currentText: "Hoy", monthNames: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"], monthNamesShort: ["Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic"], dayNames: ["Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"], dayNamesShort: ["Dom", "Lun", "Mar", "Mié", "Juv", "Vie", "Sáb"], dayNamesMin: ["Do", "Lu", "Ma", "Mi", "Ju", "Vi", "Sá"], weekHeader: "Sm", dateFormat: "dd/mm/yy", firstDay: 1, isRTL: !1, showMonthAfterYear: !1, yearSuffix: "" }, $.datepicker.setDefaults($.datepicker.regional.es), $(document).ready(function () { void 0 != $.fn.modal && ($.fn.modal.prototype.constructor.Constructor.DEFAULTS.backdrop = "static"), $("#timeOutBtn").click(function (y) { var d = {}; d.TimeOutUserText = $("#timeOutUserTxt").val(), d.TimeOutPass = $("#timeOutPassTxt").val(), d.ConnectionId = $("[id$=ConnectionId]").val(), $.ajax({ type: "POST", url: thisDomain + "/Services/TaskService.asmx/TimeOutLogin", contentType: "application/json; charset=utf-8", dataType: "json", data: "{data:" + JSON.stringify(d) + "}", success: function (y) { "loginok" == y.d ? $("#openModalTimeout").modal("hide") : toastr.error(y, "Ha ocurrido un error al verificar sus datos") }, error: function (y, d, t) { toastr.error("Por favor reintente, si el inconveniente persiste por favor actualice la página", "Ha ocurrido un error al verificar sus datos") } }) }), $("body").on("shown.bs.modal", "#openModalTimeout, parent.document", function (y) { $("#timeOutUserTxt").val($("#UsuarioDrop").text().trim()), $("#timeOutPassTxt").val("") }) }), Date.ddmm = Date.parse("2/6/2009") > Date.parse("6/2/2009"), $(document).ready(function () { void 0 !== parent.bootbox && parent.bootbox.setDefaults({ locale: "es" }), "undefined" != typeof bootbox && bootbox.setDefaults({ locale: "es" }) }), jQuery.fn.hasClass = function (y) { var d = /[\n\t]/g; y = " " + y + " "; for (var t = 0, e = this.length; t < e; t++)if ((" " + this[t].className + " ").toLowerCase().replace(d, " ").indexOf(y.toLowerCase()) > -1) return !0; return !1 }, "function" != typeof String.prototype.startsWith && (String.prototype.startsWith = function (y) { return this.slice(0, y.length) == y }), "function" != typeof String.prototype.endsWith && (String.prototype.endsWith = function (y) { return this.slice(-y.length) == y }), "function" != typeof String.prototype.contains && (String.prototype.contains = function (y) { return this.indexOf(y) > -1 }), "function" != typeof String.prototype.into && (String.prototype.into = function (y) { var d = y.split("|"); if (d.length > 0) for (var t = d.length, e = 0; e < t; e++)if (this == d[e]) return !0; return !1 }), "function" != typeof String.prototype.notInto && (String.prototype.notInto = function (y) { var d = y.split("|"); if (d.length > 0) for (var t = d.length, e = 0; e < t; e++)if (this == d[e]) return !1; return !0 }, "function" != typeof String.prototype.textWidth && (String.prototype.textWidth = function (y) { var d = y || "12px arial", t = $("<div>" + this + "</div>").css({ position: "absolute", float: "left", "white-space": "nowrap", visibility: "hidden", font: d }).appendTo($("body")), e = t.width(); return t.remove(), e })), $.fn.hasAttr = function (y) { return void 0 !== this.attr(y) && !1 !== this.attr(y) };