var MainTabber, windowsMode = !1, thisDomain, ZambaWebRestApiURL, zambaApplication = "Zamba", URLServer, urlGlobalSearch, URLServer, pathToWS; function getValueFromWebConfig(e) { var t = null, a = window.location, n = a.protocol + "//" + a.host + "/" + a.pathname.split("/")[1]; return $.ajax({ async: !1, crossDomain: !0, url: n + "/Services/ViewsService.asmx/getValueFromWebConfig?key=" + e, method: "GET", headers: { "cache-control": "no-cache" }, success: function (e) { t = null == e.childNodes[0].innerHTML ? e.childNodes[0].textContent : e.childNodes[0].innerHTML }, error: function (e, t, a, n) { console.log(e) } }), t } function LoadWinWeb() { $("#openModalIF").on("hide.bs.modal", function (e) { $("#modalIframe").attr("src", "") }), $(document).on("click", ".navbar-collapse.in", function (e) { $(e.target).is("a") && "dropdown-toggle" != $(e.target).attr("class") && $(this).collapse("hide") }), $(window).on("resize", setTabsHeight), $(window).on("resize", toggleSidePanel), $("body").on("shown.bs.collapse", "#toolbarTabTasksList", function () { setTabsHeight() }), $("body").on("hidden.bs.collapse", "#toolbarTabTasksList", function () { setTabsHeight() }), $("body").on("click", "#btnTabSearch, #anchorTabTasks, #liInsert", function (e) { setTabsHeight() }), $("body").on("click", "#btnCloseSidePanel, #btnOpenSidePanel, #btnSidePanelTasksList, #btnCloseSidePanelTasksList", function (e) { toggleSidePanel(e) }), $("body").on("click", "#toolbarTabTasksList, #ContentPlaceHolder_pnlHomeButtons, .dropdown-toggle", function (e) { EnableDropDown(e) }), GetOpenRules(), $(document).on("dragstart", ".RowStyleTasks, .RowStyleAsoc", function (e) { if (navigator.userAgent.match(/Trident\/7\./)) { var t = (a = "TR" == $(e.originalEvent.target)[0].tagName ? $(e.originalEvent.target) : $(e.originalEvent.target).parents("tr")).find("a").attr("href"); zambaURL = thisDomain + "/Views/Main/default.aspx" + t.substring(t.indexOf("?")), e.originalEvent.dataTransfer.setData("text", zambaURL), e.originalEvent.dataTransfer.setData("text", $(a.find("td")[2]).text()) } else { var a; t = (a = "TR" == $(e.toElement)[0].tagName ? $(e.toElement) : $(e.toElement).parents("tr")).find("a").attr("href"); zambaURL = thisDomain + "/Views/Main/default.aspx" + t.substring(t.indexOf("?")), e.originalEvent.dataTransfer.setData("ZambaURL", zambaURL), e.originalEvent.dataTransfer.setData("ZambaURLDesc", $(a.find("td")[2]).text()) } }), $(document).on("click", "#pagerZmb, #ContentPlaceHolder_Arbol_ArbolProcesos", function (e) { setTimeout(function () { $(".RowStyleTasks, .RowStyleAsoc").attr("draggable", !0) }, 4e3) }), $("#IdSubList").val(""), AddDynamicsTags(), $("#mainMenu >li").click(function () { SelHeaderMenu($(this)) }), $("body").on("click", "#TasksDivUL >li", function () { SelTaskMenu($(this)) }), $(".filterCount li a").click(function () { $(this).parents(".dropdown").find(".btn").html($(this).text() + ' <span class="caret"></span>').val($(this).data("value")) }), setTabsHeight(), $("body").on("shown.bs.modal", "#openModalIFUcRules, parent.document", function (e) { var t = $(this).find(".modal-body").children(); $(this).find(".modal-content").css("width", t.width() + 50).css("height", t.height() + 100) }) } function LoadHdn() { 0 == $("#taskId").length && $("<input>").attr({ type: "hidden", id: "taskId", name: "taskId", value: "<<Tarea>>.<<TaskId>>" }).appendTo("body"), 0 == $("#userid").length && $("<input>").attr({ type: "hidden", id: "userid", name: "userid", value: "<<FuncionesComunes>>.<<UsuarioActualId>>" }).appendTo("body"), 0 == $("#hdnRuleId").length && $("<input>").attr({ type: "hidden", id: "hdnRuleId", name: "hdnRuleId" }).appendTo("body"), 0 == $("#hdnAsocId").length && $("<input>").attr({ type: "hidden", id: "hdnAsocId", name: "hdnAsocId" }).appendTo("body"), 0 == $("#ZPOSTBACKFUNCTION").length && $("<input>").attr({ type: "hidden", id: "ZPOSTBACKFUNCTION", name: "RefreshTables", value: "RefreshTables" }).appendTo("body"), 1 == $("form").length && $("form").each(function () { var e = $(this).attr("id"); (void 0 !== e && !1 !== e || "" == $(this).attr("id")) && $(this).attr("id", "MainForm") }) } function getDateToday() { $(".dateToday").each(function () { var e = new Date, t = e.getDate(), a = e.getMonth() + 1, n = e.getFullYear(); t < 10 && (t = "0" + t), a < 10 && (a = "0" + a), e = t + "/" + a + "/" + n, $(this).val(e) }) } function getDateTimeToday() { $(".dateTimeToday").each(function () { var e = new Date, t = e.getDate(), a = e.getMonth() + 1, n = e.getFullYear(); t < 10 && (t = "0" + t), a < 10 && (a = "0" + a); var r = e.getHours(), o = e.getMinutes(), i = e.getSeconds(); e = t + "/" + a + "/" + n + " " + r + ":" + o + ":" + i, $(this).val(e) }) } function LoadJquery(e) { if ("undefined" == typeof jQuery) { var t = document.getElementsByTagName("head")[0], a = document.createElement("script"); a.type = "text/javascript", a.src = "Scripts/jquery-3.1.1.min.js", a.charset = "utf-8", a.crossorigin = "anonymous", t.appendChild(a), a.onload = function () { e() } } else e() } function cargaSync(e, t) { var a = '<link rel="stylesheet" type="text/css" href="', n = "<meta http-equiv="; if (0 == e) a = '<link rel="stylesheet" type="text/css" href="../../'; else a = '<link rel="stylesheet" type="text/css" href="./'; var r = ['"Content-Type" content="txt/html ; charset=utf-8">', '"X-UA-Compatible" content="IE=edge">']; var o = ["Content/jquery-ui.min.css", "Content/bootstrap.min.css", "Content/bootstrap-datetimepicker.min.css", "Content/bootstrap-theme.min.css", "Content/toastr.css", "Content/font-awesome.min.css", "Content/jquery.dataTables.css", "Scripts/kendoui/styles/kendo.common.min.css", "Scripts/kendoui/styles/kendo.default.min.css", "Scripts/kendoui/styles/kendo.default.mobile.min.css", "Scripts/kendoui/styles/kendo.dataviz.default.min.css", "Scripts/kendoui/styles/kendo.dataviz.silver.min.css", "Scripts/kendoui/styles/kendo.mobile.all.min.css", "Scripts/kendoui/styles/kendo.rtl.min.css", "Scripts/kendoui/styles/kendo.silver.min.css", "Content/partialSearchIndexs.css", "content/styles/tabber.css", "Content/App_Themes/Provincia/General.css"]; var s = ["scripts/jquery-3.1.1.min.js", "scripts/jquery-1.12.4.js", "scripts/jquery-ui.js", "scripts/jquery-ui.min.js", "scripts/tabber.js", "scripts/kendoui/js/kendo.all.min.js", "scripts/kendoui/js/kendo.grid.min.js", "scripts/jszip.min.js", "scripts/bootstrap.min.js", "scripts/moment.min.js", "scripts/moment-with-locales.min.js", "scripts/toastr.js", "scripts/zambawin.js", "scripts/jquery.datatables.min.js"]; e && (function () { for (i = 0; i <= r.length; i++)$("head").append(n + r[i]) }(), function () { for (i = 0; i < s.length; i++) { var t = document.getElementsByTagName("head")[0], a = document.createElement("script"); a.type = "text/javascript", a.async = "true", a.charset = "utf-8", a.crossorigin = "anonymous", a.src = e ? "./" + s[i] : ".././" + s[i], t.appendChild(a) } }(), function () { for (i = 0; i < o.length; i++)$("head").append(a + o[i] + '" type= "text/css" />') }()), 0 == e && (null != thisDomain && null != thisDomain || (thisDomain = location.origin.trim() + getValueFromWebConfig("ThisDomain")), null != ZambaWebRestApiURL && null != ZambaWebRestApiURL || (ZambaWebRestApiURL = location.origin.trim() + getValueFromWebConfig("RestApiUrl") + "/api"), zambaApplication = "Zamba", URLServer = thisDomain + "/ZambaChat7/", urlGlobalSearch = thisDomain + "/Views/Search/", URLServer = thisDomain + "/ZambaChat7/"), t() } function DocumentReadyEvents() { windowsMode || (LoadWinWeb(), FixsIE()), $(document).ready(function () { $(".tbox_maxlength5").attr("maxlength", "5"), $(".tbox_maxlength8").attr("maxlength", "8"), $(".solonums").each(function () { $(this).keypress(function (e) { return IntegerCheck(e) }) }), $(".ZZerosLeft").each(function (e, t) { setOnInput_ZerosLeftElem(t), $(t).on({ focus: function (e) { $(e.target).select() }, focusout: AddZerosLeft }) }), $(".ZDecimal").each(function (e, t) { setInputSeparatorElem(t), $(t).on({ focus: function (e) { $(e.target).select() }, focusout: render_Importe, keypress: val_ImporteEvent }) }), $("input").focusout(function () { "" == $(this).val() && $(this).css("border-color", "#FF0000"), $(this).hasClass("datepicker") && $(this).css("border-color", "#CFD5FF"), "" != $(this).val() && $(this).css("border-color", "#CFD5FF") }), $(".tablesorter").find("th").length >= 34 ? $(".tablesorter").children(0).css("width", "300%") : $(".tablesorter").find("th").length >= 19 && $(".tablesorter").find("th").length < 34 && $(".tablesorter").children(0).css("width", "150%"), setTimeout(function () { $(".datepicker").datepicker({ changeMonth: !0, changeYear: !0, showOn: "focus", monthNames: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"], monthNamesShort: ["Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic"], dayNames: ["Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"], dayNamesShort: ["Dom", "Lun", "Mar", "Mié", "Juv", "Vie", "Sáb"], dayNamesMin: ["Do", "Lu", "Ma", "Mi", "Ju", "Vi", "Sá"], dateFormat: "dd/mm/yy", duration: "", onClose: function () { $("#DivIndices").animate({ width: previousWidth }, "fast"), $("#separator").animate({ width: previousWidth }, "fast"); var e = $(window).width() - previousWidth - 5; $("#separator").next().animate({ width: e }, "fast") }, beforeShow: function (e, t) { previousWidth = $("#DivIndices").width(); var a = $(e).parent().prev().width(), n = $(t.dpDiv).width() + a + 20; $("#DivIndices").animate({ width: n }, "slow"), $("#separator").animate({ width: n }, "slow"); var r = $(window).width() - n - 5; $("#separator").next().animate({ width: r }, "slow") } }), LoadHdn(), getDateTimeToday(), getDateToday(), searchForInteligentText(), ZFUNCTION(); var e = $("[id$=hdnDocTypeId]").val(), t = $("[id$=hdnDocId]").val(); if (null != t && null != $("#previewDocSearch")[0]) { var a = "../../Services/GetDocFile.ashx?DocTypeId=" + e + "&DocId=" + t + "&UserID=" + GetUID() + "&ConvertToPDf=true"; try { $("#previewDocSearch").attr("src", a) } catch (e) { $("#previewDocSearch").attr("src", a) } } }, 3e3) }), ButtonsEvents(), InjectJQueryHasClassFn(), $.fn.hasAttr = function (e) { return void 0 !== this.attr(e) }, $(function () { jQuery.support.cors = !0 }) } function validateRequires() { var e = "El o los campos ", t = !0; return $("#ZFrmValidator").find(".form-control[required]").each(function (a, n) { null == n.value || null == n.value || "" == n.value || n.tagName == "Select".toUpperCase() && "0" == n.value ? (n.style.borderColor = "#FF0000", e += "'" + n.getAttribute("indexname") + "' ", t = !1) : n.style.borderColor = "#CFD5FF" }), e += "son requeridos, por favor completelos.", 0 == t && swal("", e, "warning"), t } function executeAction(e) { try { switch (null != e.msg ? swal(e.msg) : null != e.error && swal(e.error), traslateAction(e.accion)) { case "update": location.reload(); break; case "close": swal({ text: e.msg + " - Se cierra la pestaña del explorador", icon: "warning", buttons: { ok: "Aceptar" } }).then(function (e) { e && window.close() }); break; case "executerule": angular.element($("#taskController")).scope().Execute_ZambaRule(e.ruleid, getElementFromQueryString("docid")); break; case "doask": angular.element($("#taskController")).scope().doAsk(e); break; default: console.log("executeAccion(executionResult): No se reconocio ninguna accion para ejecutar") } } catch (e) { console.log(e + " - Lanzado por: [" + arguments.callee.name + "]") } } function traslateAction(e) { try { switch (e.toLowerCase()) { case "actualizar": return "update"; case "cerrar": return "close"; case "ejecutar regla": return "executerule"; case "preguntar": return "doask"; default: return e } } catch (e) { console.log(e + " - Lanzado por: [" + arguments.callee.name + "]") } } function Execute_ZambaRuleId(e) { var t = { UserId: parseInt(GetUID()), Params: { ruleId: e.target.attributes.ruleid.value, resultIds: getElementFromQueryString("docid") } }; $.ajax({ async: !1, url: ZambaWebRestApiURL + "/tasks/Execute_ZambaTaskRule", method: "POST", headers: { "content-type": "application/json" }, success: function (e) { return executeAction(e = JSON.parse(e)), !0 }, error: function (e) { return executeAction(e = JSON.parse(e)), !1 }, data: JSON.stringify(t) }) } function LoadIframe() { var e = $("[id$=hdnDocTypeId]").val(), t = $("[id$=hdnDocId]").val(); if (null != t) { var a = "../../Services/GetDocFile.ashx?DocTypeId=" + e + "&DocId=" + t + "&UserID=" + GetUID() + "&ConvertToPDf=true"; try { null != $("#previewDocSearch")[0].contentWindow ? null != $("#previewDocSearch")[0] && $("#previewDocSearch")[0].contentWindow.OpenUrl(a, -1) : $("#previewDocSearch")[0].attr("src", a) } catch (e) { $("#previewDocSearch").attr("src", a) } } } function LoadIframeForResult(e, t, a) { var n = "../../Services/GetDocFile.ashx?DocTypeId=" + e + "&DocId=" + t + "&UserID=" + a + "&ConvertToPDf=true"; try { null != $("#previewDocSearch")[0] && $("#previewDocSearch")[0].contentWindow.OpenUrl(n, -1) } catch (e) { $("#previewDocSearch").attr("src", n) } } function LoadJs(e) { var t = document.getElementsByTagName("head")[0], a = document.createElement("script"); a.type = "text/javascript", a.charset = "utf-8", a.crossorigin = "anonymous", a.src = windowsMode ? "./" + e : ".././" + e, t.appendChild(a) } function LoadDropZone() { LoadJs("DropFiles/dropfiles.js") } function ZFUNCTION() { } function ButtonsEvents() { $(".fg-button:not(.ui-state-disabled)").hover(function () { $(this).addClass("ui-state-hover") }, function () { $(this).removeClass("ui-state-hover") }).mousedown(function () { $(this).parents(".fg-buttonset-single:first").find(".fg-button.ui-state-active").removeClass("ui-state-active"), $(this).is(".ui-state-active.fg-button-toggleable, .fg-buttonset-multi .ui-state-active") ? $(this).removeClass("ui-state-active") : $(this).addClass("ui-state-active") }).mouseup(function () { $(this).is(".fg-button-toggleable, .fg-buttonset-single .fg-button, .fg-buttonset-multi .fg-button") || $(this).removeClass("ui-state-active") }) } function InjectJQueryHasClassFn() { jQuery.fn.hasClass = function (e) { var t = /[\n\t]/g; e = " " + e + " "; for (var a = 0, n = this.length; a < n; a++)if ((" " + this[a].className + " ").toLowerCase().replace(t, " ").indexOf(e.toLowerCase()) > -1) return !0; return !1 }, "function" != typeof String.prototype.startsWith && (String.prototype.startsWith = function (e) { return this.slice(0, e.length) == e }), "function" != typeof String.prototype.endsWith && (String.prototype.endsWith = function (e) { return this.slice(-e.length) == e }), "function" != typeof String.prototype.contains && (String.prototype.contains = function (e) { return this.indexOf(e) > -1 }) } function InjectJQueryHasClassFn() { jQuery.fn.hasClass = function (e) { var t = /[\n\t]/g; e = " " + e + " "; for (var a = 0, n = this.length; a < n; a++)if ((" " + this[a].className + " ").toLowerCase().replace(t, " ").indexOf(e.toLowerCase()) > -1) return !0; return !1 }, "function" != typeof String.prototype.startsWith && (String.prototype.startsWith = function (e) { return this.slice(0, e.length) == e }), "function" != typeof String.prototype.endsWith && (String.prototype.endsWith = function (e) { return this.slice(-e.length) == e }), "function" != typeof String.prototype.contains && (String.prototype.contains = function (e) { return this.indexOf(e) > -1 }) } function LoadZVarComponents() { $(".zvar").each(function () { var e; e = this.indexOf("(") > 0 ? this.replace("zamba_zvar(", "").replace(")", "") : this.substr("zamba_zvar_".length), $.ajax({ type: "POST", url: thisDomain + "/AsignVarValue", data: "{ VarName: '" + e + "', E: " + this + "}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (t) { this.InnerHtml = t, this.Id = e }, cache: !0, error: function (e, t, a) { swal("Error al obtener el cuerpo de tabla. \r" + e.responseText) } }) }) } function SetRuleIdAndZvar(e, t, a) { document.getElementById("hdnRuleId").name = t, document.getElementById("hdnRuleId").value = a, frmMain.submit() } function SetGlobalParams(e) { pathToWS = e } function getWSPath() { return pathToWS } function ProcessAjaxFunctions() { try { var e = $(".tabbertab").length; if (e > 0) { loadedTabs = new Array(e); for (var t = 0; t < e; t++)loadedTabs[t] = !1 } } catch (e) { } getDateToday(), getDateTimeToday(), "function" == typeof ProcessAllzAutoAjaxTable && ProcessAllzAutoAjaxTable(), "function" == typeof ProcessAllJsonTables && ProcessAllJsonTables() } function searchForInteligentText() { var e = [], t = !1; if ($("body").children().each(function () { $.each(this.attributes, function () { this.value.indexOf(">>.<<") > -1 && (t = !0) }), t && (e.push(this.id), t = !1) }), e.length > 0) { var a = e.join(); $("<input type=hidden id='idsConTextoInteligente' value='" + a + "'/>").appendTo("body") } } function SetIframeSource(e, t) { var a = $("#" + e); a.length && a.attr("src", t) } function View_Doc() { try { var e = $("[id$=hdnFilePath]").val(); window.open(e, "_blank") } catch (e) { } } LoadJquery(function () { cargaSync(windowsMode, DocumentReadyEvents) }), $(window).bind("beforeunload", function () { console.log("beforeunload") }); var OpenModalIF = { show: function () { var e = $("#openModalIF", window.parent.document); e.css("top", 0).children(".modal-dialog").css({ height: "50%", minHeight: "500px", minWidth: "100px", "margin-top": "0px" }).resizable({ alsoResize: ".modal-body" }), $(".ui-resizable-handle", window.parent.document).attr("style", "display:block !important"), e.modal({ backdrop: "static", keyboard: !1 }).draggable() }, fullscreen: function (e) { var t = $(e).attr("state") || "restore"; if ("restore" == t) { var a = $(e).parents(".modal-dialog"); $(e).attr("lastHeight", a.css("height")).attr("lastWidth", a.css("width")), a.css({ height: window.windowHeight() - 20 + "px", width: window.windowWidth() - 20 + "px", margin: 0, left: 0 }).parents("#openModalIF").css({ padding: 0, left: 0, top: 0 }) } else $(e).parents(".modal-dialog").css({ height: $(e).attr("lastHeight"), width: $(e).attr("lastWidth") }); $(e).attr("state", "restore" == t ? "maximize" : "restore") } }, previousWidth, previousWidth; function Collapse(e) { e ? ($("#tabContent").attr("src", ""), $("#btnCollapse").hide(), $("#tabContent").hide("fast")) : ($("#btnCollapse").show(), $("#tabContent").show("fast"), ShowLoadingAnimation()) } function ShowTaskChat(e) { Collapse(!1); e = sessionStorage.getItem("taskid"); $("#tabContent").attr("src", '../WF/TaskDetails/TaskChat.aspx?ResultID=<%=DocId %>&Taskid="' + e + '"').val(e) } function ShowForum() { Collapse(!1), $("#tabContent").attr("src", "../WF/TaskDetails/TaskForum.aspx?ResultID=<%=DocId %>&DocTypeId=<%=DocTypeId%>&currentUserID=<%=CurrentUserID%>") } function ShowAsociated() { Collapse(!1), $("#tabContent").attr("src", "../WF/TaskDetails/TaskAsociated.aspx?ResultID=<%=DocId %>&DocTypeId=<%=DocTypeId%>") } function ShowDocHistory() { Collapse(!1), $("#tabContent").attr("src", "../WF/TaskDetails/TaskHistory.aspx?ResultID=<%=DocId %>") } function ShowMailHistory() { Collapse(!1), $("#tabContent").attr("src", "../WF/TaskDetails/TaskMailhistory.aspx?ResultID=<%=DocId %>") } function cleanBorder(e) { var t = $(e).parent().parent().children("input"); $(t).css("border", "") } function ClearBtn() { $(".col-xs-8.InputFilter").children("input").val("") } function CleanInputModal() { $(".btntrash").trigger("click"), $(".BtnTrashModal").hide() } function CleanAllInputs() { $(".btntrash").trigger("click") } function InputSelec() { $("#search-form :input").change(function () { var e = $(this); "" === e.val() ? e.css("border", "") : e.css("border", "solid 1px #FF8A00") }) } function BtnTrashHidden() { $(".BtnTrashModal").hide(), "" != $("#ModalInput").val() && $(".BtnTrashModal").show() } function GetUID() { var e = $("#hdnUserId"); return 0 == e.length && (e = $("#ContentPlaceHolder_hdnUserId")), 0 == e.length && (e = $("#ctl00_hdnUserId")), 0 == e.length && (e = $("#hdnUserId")), 0 == e.length && (e = $("hdnUserId")), $(e).val() } function makeCalendar(e) { } function AddCalendar(e, t) { -1 != e.indexOf("completarindice") ? $("#" + e).length > 0 && $("#" + e).datepicker({ changeMonth: !0, changeYear: !0, showOn: "focus", dateFormat: "dd/mm/yyyy", duration: "", onClose: function () { $("#DivIndices").animate({ width: previousWidth }, "fast"), $("#separator").animate({ width: previousWidth }, "fast"); var e = $(window).width() - previousWidth - 5; $("#separator").next().animate({ width: e }, "fast") }, beforeShow: function (e, t) { previousWidth = $("#DivIndices").width(); var a = $(e).parent().prev().width(), n = $(t.dpDiv).width() + a + 20; $("#DivIndices").animate({ width: n }, "slow"), $("#separator").animate({ width: n }, "slow"); var r = $(window).width() - n - 5; $("#separator").next().animate({ width: r }, "slow") } }) : $(function () { $("#" + e).length > 0 && $("#" + e).datepicker({ changeMonth: !0, changeYear: !0, showOn: "focus", duration: "", dateFormat: "dd/mm/yy", constrainInput: !0 }) }) } function windowHeight() { var e = 0; return "number" == typeof window.innerWidth ? e = window.innerHeight : document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight) ? e = document.documentElement.clientHeight : document.body && (document.body.clientWidth || document.body.clientHeight) && (e = document.body.clientHeight), e } function windowWidth() { var e = 0; return "number" == typeof window.innerWidth ? e = window.innerWidth : document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight) ? e = document.documentElement.clientWidth : document.body && (document.body.clientWidth || document.body.clientHeight) && (e = document.body.clientWidth), e } function ajustarselects() { $("select").each(function () { $(this).hasClass("notExpand") || 0 == $(this).attr("multiple") && $(this).mousedown(function () { if ("auto" != $(this).css("width")) { var e = $(this).width(); $(this).data("origWidth", $(this).css("width")).css("width", "auto"), $(this).width() < e && ($(this).unbind("mousedown"), $(this).css("width", $(this).data("origWidth"))) } }).blur(function () { $(this).css("width", $(this).data("origWidth")) }).change(function () { $(this).css("width", $(this).data("origWidth")) }) }) } function expandDiv(e, t, a) { var n = 0, r = 0; "number" == typeof window.innerWidth ? (n = window.innerWidth, r = window.innerHeight) : document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight) ? (n = document.documentElement.clientWidth, r = document.documentElement.clientHeight) : document.body && (document.body.clientWidth || document.body.clientHeight) && (n = document.body.clientWidth, r = document.body.clientHeight), n -= t, r -= a, setInterval("doExpand('" + e + "'," + n + "," + r + ")", 500) } function doExpand(e, t, a) { $("#" + e).width(t), $("#" + e).height(a) } function modifyTextBoxSize(e) { 5 == e.rows ? e.rows = 1 : e.rows = 5 } function maxlength(e, t) { return e.value.length < t } function getHeightScreen() { var e = ("none" == $("#MasterHeader").css("display") ? 0 : $("#MasterHeader").height()) + ("none" == $("#barra-Cabezera").css("display") ? 0 : $("#barra-Cabezera").innerHeight()), t = document.body.clientHeight - e; return t > 500 ? t : 500 } function getEnableButton() { var e = GetGroupsIdsByUserId(GetUID()); $("[enableGroups],[enablegroups]").each(function () { var t; if (null != (t = this.getAttribute("enableGroups")) && null != (t = this.getAttribute("enablegroups"))) for (var a = t.split(","), n = e.split(","), r = 0; r < a.length; r++)for (var o = 0; o < n.length; o++)a[r] == n[o] && $(this).css("display", "inline") }), $("[disableGroups],[disablegroups]").each(function () { var t; if (null != (t = this.getAttribute("disableGroups")) && null != (t = this.getAttribute("disablegroups"))) for (var a = t.split(","), n = e.split(","), r = 0; r < a.length; r++)for (var o = 0; o < n.length; o++)a[r] == n[o] && $(this).css("display", "none") }); var t = $("input"); for (i = 0; i < t.length; i++)if (t[i].getAttribute("enableGroups")) { $(this).addClass("tsen"); var a = GetGroupsIdsByUserId(GetUID()), n = JSON.stringify(a); n.contains("1020160") || n.contains("1020161") || n.contains("13510") || n.contains("13511") || n.contains("13512") || n.contains("13513") || n.contains("13514") || n.contains("13515") || n.contains("13516") || n.contains("13517") ? $(".tsen").css("display", "block") : $(".tsen").css("display", "none") } } function getMTHeight() { var e = document.getElementById("mainMenu"); return e ? $(e).height() : 0 } function getTBHeight() { var e = document.getElementById("TasksDivUL"); return e ? $(e).height() : 0 } function GetDocumentAvailableHeight() { var e = "function" == typeof parent.getMainMenuHeightFromParent ? parent.getMainMenuHeightFromParent() : 0, t = "function" == typeof parent.getTBH ? parent.getTBH() : 0, a = getHeightScreen(); return (0 == a ? parent.GetTaskAvailableHeight() : a) - e - t - (0 == getToolBTaskH() ? 30 : getToolBTaskH()) - (0 == getTabDetH() ? 30 : getTabDetH()) } function ValidateLength(e, t) { var a = e.value; return $(e).valid(), a.length < t } function KeyIsValid(e, t, a) { if (e.keyCode > 0) return !0; var n = e.charCode || e.keyCode || 0, r = !1; switch (t) { case "numeric": n >= 48 && n <= 57 && (r = !0); break; case "date": (n >= 48 && n <= 57 || 47 == n) && (r = !0); break; default: if (t.indexOf("decimal") < 0) break; var o = t.split("_"); if (o.length < 2) break; var i = o[1]; if (!i) break; var s = o[2]; if (!s) break; var l = $(a).val(), c = l.indexOf(","), d = $(a).caret().start; 44 == n ? r = -1 == c && 0 != d : n >= 48 && n <= 57 && (r = -1 == c ? l.length < s : d > c ? l.length - i < c + 1 : c < s) }return r } function SelectErrorTab(e) { var t, a; tabErrorSelected || ($(".tabberlive").each(function () { a = 0, t = this, $(this).find(".tabbertab").each(function () { if ($(this).find("#" + e.id).length > 0) return t.tabber.tabShow(a), void (a = 0); null != $(this).parent()[0] && t.uniqueID == $(this).parent()[0].uniqueID && a++ }) }), tabErrorSelected = !0) } var validatorExtended = !1, tabErrorSelected = !1, lastErrorElement, selectHeight; function DoGeneralValidation(e, t) { if ($("#aspnetForm").length && !$("#aspnetForm").valid()) { t.stopPropagation(), t.preventDefault(), setTimeout("parent.hideLoading();", 1e3); var a = $("#divValidationFail"); return a && ($(a).dialog({ autoOpen: !1, modal: !0, position: "center", closeOnEscape: !1, draggable: !1, resizable: !1, open: function (e, t) { $(".ui-dialog-titlebar-close").hide() } }), $(a).dialog("open")), !1 } return !0 } function DoRuleValidation(e, t) { var a = !0; if ($('[id$="pnlUcRules"]').find(".RuleField").each(function () { if (!$(this).valid()) return a = !1, !1 }), a) return !0; setTimeout("parent.hideLoading();", 1e3); var n = $("#divValidationFail"); return n && ($(n).dialog({ autoOpen: !1, modal: !0, position: "center", closeOnEscape: !1, draggable: !1, resizable: !1, open: function (e, t) { $(".ui-dialog-titlebar-close").hide() } }), $(n).dialog("open")), !1 } function SetValidationsAction(e) { SetValidateForDataType(), SetValidateForRequired(), SetDefaultValues(), SetHierarchicalFunctionally(), SetMinValuesValidations(), SetMaxValuesValidations(), SetListFilters(), e && $("#" + e).click(function (e) { $("#aspnetForm").valid() || (e.preventDefault(), setTimeout("parent.hideLoading();", 1e3)) }); try { null == jQuery.data(document.forms[0], "validator") && $("#aspnetForm").validate && $("#aspnetForm").validate({ onsubmit: !1 }); var t = jQuery.data(document.forms[0], "validator"); if (null == t) return; var a = t.settings.highlight; if (t.settings.highlight = null, t.settings.highlight = function (e, t, n) { a(e, t, n), lastErrorElement == e.uniqueID && null != e[0] || (lastErrorElement = e.uniqueID, tabErrorSelected = !1), SelectErrorTab(e) }, validatorExtended || (validatorExtended = ExtendValidator()), e) { var n = document.getElementById(e); if (n) { var r = n.onclick; n.onclick = null, $(n).click(function (e) { if ($(this).attr("id").indexOf("WFExecution") > -1) { if (!DoRuleValidation(this, e)) return !1; ShowLoadingAnimation(), r && r() } else { if (!DoGeneralValidation(this, e)) return !1; r && r() } }) } } } catch (e) { } } function SetHeight() { var e = $(document).outerHeight(!0), t = $("#rowTaskHeader").outerHeight(!0); $("#rowTaskDetail").css("height", e - t) } function SetValidateForLength() { $(".length").each(function () { if (!$(this).hasClass("readonly") && "Window" != this.constructor.name && "hdnRuleId" != $(this)[0].id) { var e = $(this).attr("length"); e && ($(this).change(function (t) { ValidateLength(this, e) || t.preventDefault() }), $(this).keypress(function (t) { ValidateLength(this, e) || t.preventDefault() }), $(this).rules("add", { maxlength: e, messages: { maxlength: jQuery.validator.format("Se ha excedido largo de " + e + " caracteres.") } })) } }) } function SetValidateForDataType() { $(".dataType").each(function () { if (!$(this).hasClass("readonly")) { var e = $(this).attr("dataType"); if (e) switch ($(this).change(function (t) { KeyIsValid(t, e, this) || t.preventDefault() }), $(this).keypress(function (t) { KeyIsValid(t, e, this) || t.preventDefault() }), e) { case "numeric": $(this).rules("add", { digits: !0, messages: { digits: jQuery.validator.format("Solo se permite un n&uacute;mero entero.") } }); break; case "date": $(this).rules("add", { dateAR: !0, messages: { dateAR: jQuery.validator.format("La fecha debe estar en formato:<br/> dia/mes/año.") } }), MakeDateIndexs(this); break; default: $(this).rules("add", { number: !0, messages: { number: jQuery.validator.format("Solo se permiten n&uacute;meros.") } }) } } }) } function SetMinValuesValidations() { $(".haveMinValue").each(function () { applySetMinValuesValidations(this) }) } function applySetMinValuesValidations(e) { if (!$(e).hasClass("readonly")) { var t, a = $(e).attr("ZMinValue"), n = $(e).attr("dataType"), r = a.startsWith("="); if (a = a.replace("=", "")) if ("ZGetDate" == a && (a = getLocaleShortDateString(new Date)), r ? $(e).rules("add", { lessEqualThan: a, messages: { lessEqualThan: "El valor debe ser mayor o igual que: " + a } }) : $(e).rules("add", { lessThan: a, messages: { lessThan: "El valor debe ser mayor que: " + a } }), "date" == n) t = CreateDate(r ? Number(a.split("/")[0]) : Number(a.split("/")[0]) + 1, a.split("/")[1] - 1, a.split("/")[2]), $(e).datepicker("option", "minDate", t) } } function Hidden(e) { var t = document.getElementById(e), a = t.nodeName.toLowerCase(); if (t) switch (a) { case "input": switch (t.type.toLowerCase()) { case "checkbox": $(t).css("display", "none"); break; case "text": $(t).parent().css("display", "none"), $(t).parent().prev().css("display", "none"); break; default: $(t).css("display", "none") }break; case "textarea": case "select": $(t).css("display", "none") } } function Visible(e) { var t = document.getElementById(e), a = t.nodeName.toLowerCase(); if (t) switch (a) { case "input": switch (t.type.toLowerCase()) { case "checkbox": $(t).css("display", "block"); break; case "text": $(t).parent().css("display", "block"), $(t).parent().prev().css("display", "block"); break; default: $(t).css("display", "block") }break; case "textarea": $(t).css("display", "block"); break; case "select": $(t).css("display", "block") } } function SetMaxValuesValidations() { $(".haveMaxValue").each(function () { if (!$(this).hasClass("readonly")) { var e, t = $(this).attr("ZMaxValue"), a = $(this).attr("dataType"), n = t.startsWith("="); if (t = t.replace("=", "")) if ("ZGetDate" == t && (t = getLocaleShortDateString(new Date)), n ? $(this).rules("add", { greaterEqualThan: t, messages: { greaterEqualThan: "El valor debe ser menor o igual que: " + t } }) : $(this).rules("add", { greaterThan: t, messages: { greaterThan: "El valor debe ser menor que: " + t } }), "date" == a) e = CreateDate(n ? Number(t.split("/")[0]) : Number(t.split("/")[0]) - 1, t.split("/")[1] - 1, t.split("/")[2]), $(this).datepicker("option", "maxDate", e) } }) } function CreateDate(e, t, a) { var n = new Date; return n.setFullYear(a), n.setMonth(t), n.setDate(Number(e)), n } function SetValidateForRequired() { $(".isRequired").each(function () { MakeRequired(this.id) }) } function MakeRequired(e) { var t = document.getElementById(e); if (t) { var a = $(t).attr("indexName"); a ? $(t).rules("add", { required: !0, messages: { required: jQuery.validator.format("El campo " + a + " es requerido.") } }) : $(t).rules("add", { required: !0, messages: { required: jQuery.validator.format("Por favor complete este campo.") } }) } } function MakeNonRequired(e) { $("#" + e).rules("remove", "required") } function Enable(e) { var t = document.getElementById(e), a = t.nodeName.toLowerCase(); if (t) switch (a) { case "input": switch (t.type.toLowerCase()) { case "checkbox": $(t).removeAttr("disabled"), $(t).removeClass("ReadOnly"); break; default: $(t).removeAttr("readOnly"), $(t).removeClass("ReadOnly") }break; case "textarea": $(t).removeAttr("readOnly"), $(t).removeClass("ReadOnly"); break; case "select": $(t).removeAttr("disabled") } } function Disable(e) { var t = document.getElementById(e), a = t.nodeName.toLowerCase(); if (t) switch (a) { case "input": switch (t.type.toLowerCase()) { case "checkbox": $(t).attr("disabled", "disabled"), $(t).addClass("ReadOnly"); break; default: $(t).attr("readOnly", "readOnly"), $(t).addClass("ReadOnly"), $(t).val("") }break; case "textarea": $(t).attr("readOnly", "readOnly"), $(t).addClass("ReadOnly"), $(t).val(""); break; case "select": $(t).attr("disabled", "disabled") } } function SetDefaultValues() { $(".haveDefaultValue").each(function () { var e = $(this).attr("DefaultValue"); "" == $(this).val() && $(this).val(e) }) } function SetHierarchicalFunctionally() { $(".HierarchicalIndex").each(function () { $(this).change(function () { var e = $(this).attr("ChildIndexId"), t = $(this).attr("id").split("_")[2], a = e.split("|"); if (a.length > 1) for (var n = 0; n < a.length; n++)a[n] && "" != a[n] && ("string" == typeof $(this).val() ? GetHierarchyOptions(a[n], t, $(this).val()) : GetHierarchyOptions(a[n], t, $(this).val()[0])); else "string" == typeof $(this).val() ? GetHierarchyOptions(a[0], t, $(this).val()) : GetHierarchyOptions(a[0], t, $(this).val()[0]) }) }) } function GetHierarchyOptions(e, t, a, n, r) { var o, i, s; return void 0 !== r && (r.stopImmediatePropagation(), r.preventDefault()), null == document.config && (document.config = parent.document.config), !$("#zamba_index_" + e) || (o = GetUID(), n ? (i = thisDomain + "/Services/IndexService.asmx/GetHierarchyOptionsWidthID", s = { IndexId: e, ParentIndexId: t, ParentValue: a, userId: o, SenderID: n }) : (i = thisDomain + "/Services/IndexService.asmx/GetHierarchyOptions", s = s = { IndexId: e, ParentIndexId: t, ParentValue: a, userId: o }), $.ajax({ type: "POST", url: i, data: s, success: function (e) { IndexsCallback(xml2json(e)) }, error: function (e, t, a) { IndexsOnError(e) } }), !0) } function InjectCondition(idSource, idTarget, action, rollback, value, comparator) { var comparation, comparateValue, comparateSource = "$(this).val().toLowerCase()"; if (value.indexOf("<Attribute>") > -1) { var attrID = "zamba_index_" + value.replace("<Attribute>(", "").replace(")", ""); comparateValue = "$('#" + attrID + "').val().toLowerCase()" } else comparateValue = "'" + value.toLowerCase() + "'"; switch (comparator) { case "==": case "!=": case "<": case ">": case "<=": case ">=": comparation = comparateSource + comparator + comparateValue; break; case "starts": comparation = comparateSource + ".startsWith(" + comparateValue + ")"; break; case "ends": comparation = comparateSource + ".endsWith(" + comparateValue + ")"; break; case "in": comparation = comparateSource + ".contains(" + comparateValue + ")"; break; case "into": comparation = comparateSource + ".into(" + comparateValue + ")"; break; case "notInto": comparation = comparateSource + ".notInto(" + comparateValue + ")" }var objSource = document.getElementById(idSource); objSource && ("input" != objSource.nodeName.toLowerCase() && "textarea" != objSource.nodeName.toLowerCase() || $(objSource).keyup(function () { eval(comparation) ? eval(action + "('" + idTarget + "')") : eval(rollback + "('" + idTarget + "')") }), $(objSource).change(function () { eval(comparation) ? eval(action + "('" + idTarget + "')") : eval(rollback + "('" + idTarget + "')") }), $(window).on("load", function () { $("#" + idSource).change() })) } function SetListFilters() { $("select:not(:disabled)").each(function () { null != $(this).attr("id") && $(this).attr("id").toLowerCase().indexOf("zamba_index_") > -1 && !$(this).hasClass("readonly") && "none" != $(this).css("display") && $(this).hasClass("addFilterSearch") && $(this).click(function () { CreateTable(this, !1) }) }) } function IndexsCallback(e) { var t, a = e.toString().split("|")[0]; t = isNaN(a) ? a : "zamba_index_" + e.toString().split("|")[0]; var n = e.toString().split("|")[1], r = document.getElementById(t); r && r.nodeName && "input" != r.nodeName.toLowerCase() && ($("#" + t).html(n), $("#" + t).change()) } function IndexsOnError(e) { toastr.error("Error: " + e.get_message()) } function ExecuteFormReadyActions() { try { null != $("#zamba_showOriginal") && $("#zamba_showOriginal").click(function () { ShowLoadingAnimation() }) } catch (e) { console.log(e) } try { $("#zamba_save").click(function () { ShowLoadingAnimation() }) } catch (e) { console.log(e) } try { FixFocusError() } catch (e) { console.log(e) } try { SetValidationsAction("zamba_save") } catch (e) { console.log(e) } try { ajustarselects() } catch (e) { console.log(e) } try { $("input[id^=zamba_rule_]").each(function () { $(this).hasClass("DontSave") ? $(this).click(function () { ShowLoadingAnimation(), $("#hdnRuleActionType").val("DontSave"), document.ExecuteValidations = !1 }) : $(this).click(function () { ShowLoadingAnimation(), $("#hdnRuleActionType").val("Save"), document.ExecuteValidations = !0 }) }), $("button[id^=zamba_rule_]").each(function () { $(this).hasClass("DontSave") ? $(this).click(function () { ShowLoadingAnimation(), $("#hdnRuleActionType").val("DontSave"), document.ExecuteValidations = !1 }) : $(this).click(function () { ShowLoadingAnimation(), $("#hdnRuleActionType").val("Save"), document.ExecuteValidations = !0 }) }) } catch (e) { console.log(e) } try { $(".zvarDropDown").zvarDropDown() } catch (e) { console.log(e) } try { $(".zAjaxTable").zAjaxTable() } catch (e) { console.log(e) } try { $(".zAutocomplete").zAutocomplete() } catch (e) { console.log(e) } try { getEnableButton() } catch (e) { console.log(e) } } function MakeDateIndexs(e) { $(e).hasClass("ReadOnly") || $(e).hasClass("hasDatepicker") || AddCalendar(e.id) } function FixFocusError() { $("input[type=text]").focus(function () { $(this).hasClass("hasDatepicker") || ($(this).select(), $(this).caret) }), $("textarea").focus(function () { $(this).select(), void 0 !== $(this).caret && ($(this).caret().start = 0, $(this).caret().end = 0) }) } function SetIndexPnlVisibility(e, t, a) { var n, r, o = document.getElementById("DivIndices"), i = (document.getElementById("btnOcultar"), document.getElementById("btnVisualizar"), $("#ctl00_ContentPlaceHolder_ucTaskDetail_ctl00_completarindice_tblIndices").width()); $(e).hasClass("Expand") ? ($(a).css("overflow", "auto"), r = $(o)[0].scrollWidth - i, $(o).animate({ left: 0 }, "slow"), n = $(t).width() - $(o).width(), $("#separator").animate({ width: $(o).width() }, "slow"), $(t).animate({ width: n + 16 + r }, "slow"), $(e).addClass("Collapse"), $(e).removeClass("Expand")) : ($(a).css("overflow", "hidden"), r = $(o)[0].scrollWidth - i, n = 0 - $(o).width() + 16 + r, $(o).animate({ left: n }, "slow"), $("#separator").animate({ width: 16 }, "slow"), n = $(t).width() + $(o).width() - 16 + r, $(t).animate({ width: n }, "slow"), $(e).addClass("Expand"), $(e).removeClass("Collapse")) } function AddFilter(e, t) { } function CreateTable(e, t) { var a = $(window).height(), n = e.id.toString().split("_"), r = "zamba_index_" + n[n.length - 1].trim(); $("#dynamic_filter").data("indexid", r); var o = LoadTable3(r, t); $("#dynamic_filter").html(""); var i = '<div class="modal fade" id="openModalSearch" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true"><div class="modal-dialog"> <div class="modal-content" id="openModalIFSearch"> <div class="modal-header"><button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Cerrar</span></button><h4 class="modal-title" id="modalFormTitleSearch"></h4></div><div class="modal-body" id=""><div id="modalDivBodySearch">' + o; i += '<center><input id="btnAceptDynamic" type="button" class="btn btn-success" value="Aceptar" onclick="Accept()" />', i += '<input id="btnCancelDynamic" type="button" value="Cancelar" class="btn btn-info" style=" margin-left:10px;" onclick="Cancel()" /></center>', i += "</div> </div> </div> </div>", $("#dynamic_filter").html(i), $("#example tbody").click(function (e) { $(s.fnSettings().aoData).each(function () { $(this.nTr).removeClass("row_selected") }), $(e.target.parentNode).addClass("row_selected") }), $("#example tr").click(function () { $(this).hasClass("row_selected") ? $(this).removeClass("row_selected") : $(this).addClass("row_selected") }), $("#delete").click(function () { var e = fnGetSelected(s); s.fnDeleteRow(e[0]) }); var s = $("#example").dataTable({ bPaginate: !1, bLengthChange: !1, bInfo: !1, bAutoWidth: !1, bSort: !1 }), l = selectHeight >= a ? a - 45 : selectHeight + 45, c = selectHeight > l - 70 ? l - 70 : selectHeight; c <= 0 && (c = 30), selectHeight = selectHeight > 1400 ? selectHeight / 10 : selectHeight, l > $(window).width() - 600 ? ($("#dynamic_filter").css("height", selectHeight - 77 + "px"), $("#exampleContainer").css("height", selectHeight - 160 + "px"), l = c - 130) : l = c - 130, $("#example_wrapper").height(c), selectHeight > a - 70 && (c = a - 100, $("#exampleContainer").height(c)), $("#dynamic_filter").css("height", ""), $("#openModalSearch").modal(), $("#openModalSearch").draggable(), setTimeout("parent.hideLoading();", 500) } function Cancel() { $("#openModalSearch").modal("hide") } function Accept() { for (var e = $("#example tbody tr"), t = "", a = 0; a < e.length; a++)$(e[a]).hasClass("row_selected") && (t = e[a], t = $(t).find("td")[0].innerHTML); "" == t ? toastr.error("Por favor seleccione una fila") : ($("#" + $("#dynamic_filter").data("indexid") + " option").each(function () { $(this).val().toString().trim() == t.toString().trim() && ($(this).attr("selected", "selected"), $(this).parent().change(), $(this).parent().valid()) }), Cancel()) } function fnGetSelected(e) { for (var t = new Array, a = e.fnGetNodes(), n = 0; n < a.length; n++)$(a[n]).hasClass("row_selected") && t.push(a[n]); return t } function LoadTable3(e, t) { selectHeight = 0; var a = "", n = $("#" + e + " option"); a = '<div id="exampleContainer" style="overflow:auto;height:340px !important"><table cellpadding="0" cellspacing="0" border="0" class="display" id="example" style="height:60px;">', a += "<thead>", a += "<tr>", a += t ? "<th>Codigo</th>" : '<th style="display:none;">Codigo</th>', a += "<th>Descripcion</th>", a += "</tr>", a += "</thead>", a += "<tbody>"; for (var r = 0; r < n.length; r++)a += '<tr class="gradeA">', t ? a += "<td>" : (selectHeight += 20, a += '<td style="display:none;">', a += n[r].value, a += "</td>", a += "<td>", a += n[r].text, a += "</td>", a += "</tr>"); return a += "</tbody>", a += "<tfoot>", a += "<tr>", a += "</tr>", a += "</tfoot>", a += "</table></div>" } document.ExecuteValidations = !0; var TaskIds = { Url: function () { return $("iframe#IFTaskContent").attr("src") || parent.$("iframe#IFTaskContent").attr("src") || "" }, DocTypeId: function () { return this.GetParam("doctype=") }, DocId: function () { return this.GetParam("docid=") }, TaskId: function () { return this.GetParam("taskid=") }, WFStepId: function () { return this.GetParam("wfstepid=") }, GetParam: function (e) { var t = this.Url().substring(this.Url().indexOf(e)).replace(e, ""), a = new RegExp(/^\d+/).exec(t); return null == a ? "" : a[0] } }, TaskOptions = { SetFav: function (e) { toastr.info(t ? "La tarea ya NO es favorita" : "La tarea se ha marcado como favorita", "Zamba"); var t = "true" == $(e).attr("isset").toLowerCase() || !1; KeepTaskOptions("updatefavorite", TaskIds.DocId(), TaskIds.DocTypeId(), !t), $(e).attr({ isset: !t, title: t ? "Marcar como favorito" : "Desmarcar favorito" }), $(e).children("span").removeClass().addClass(t ? "glyphicon glyphicon-heart-empty " : "glyphicon glyphicon-heart ") }, SetImportant: function (e) { toastr.info(t ? "La tarea ya NO es importante" : "La tarea se ha marcado como importante", "Zamba"); var t = "true" == $(e).attr("isset").toLowerCase() || !1; KeepTaskOptions("updateimportant", TaskIds.DocId(), TaskIds.DocTypeId(), !t), $(e).attr({ isset: !t, title: t ? "Marcar como importante" : "Desmarcar importante" }), $(e).children("span").removeClass().addClass(t ? "glyphicon glyphicon-star-empty " : "glyphicon glyphicon-star ") }, AddNews: function (e) { parent.bootbox.dialog({ message: "<form id='TNfrm' action=''>            <textarea type='text' id='textAreaTaskNews' style='max-width: 560px;' class='form-control' rows='8'/>            </form>", title: "Novedades", buttons: [{ label: "Guardar", className: "btn btn-primary", callback: function (e) { var t = $(e.target).parents(".modal").find("#textAreaTaskNews"); null != t && ("" == t.val() ? toastr.info("No se ingreso la novedad ya que no contenia texto") : KeepTaskOptions("addnews", TaskIds.DocId(), TaskIds.DocTypeId(), t.val())) } }], callback: function () { console.log("Hi " + $("#first_name").val()) } }) } }; function KeepTaskOptions(e, t, a, n) { $.ajax({ type: "POST", url: "../../taskoptions/" + e, data: "{ 'docId': " + t + ", 'docTypeId': " + a + ",'userId': " + GTUID() + ", 'val': '" + n + "'}", contentType: "application/json; charset=utf-8", success: function (e) { }, error: function (e, t, a) { } }) } function getParameterByName(e, t) { e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]"); var a, n = new RegExp("[\\?&]" + e + "=([^&#]*)"); return null == (a = null != t ? n.exec(t) : n.exec(window.location.search)) ? "" : decodeURIComponent(a[1].replace(/\+/g, " ")) } function CheckIfOpenTask() { var e = getParameterByName("taskid"), t = getParameterByName("docid"), a = getParameterByName("doctype"), n = getParameterByName("docname"), r = "../WF/TaskSelector.ashx?TaskId=" + e + "&DocId=" + t + "&DocTypeId=" + a, o = document.getElementById("ctl00_hdnUserID").value; e && "" != e || (e = 0), t && "" != t || (t = 0), 0 == e && 0 == t || OpenDocTask3(e, t, !1, n, r, o) } var urlToOpen = "", docNameToOpen = "", lsTabs = []; function AddDocTaskToOpenList(e, t, a, n, r, o, i) { try { e = e && "" != e ? parseInt(e) : 0, t = t && "" != t ? parseInt(t) : 0, i = i && "" != i ? parseInt(i) : "" } catch (e) { toastr.error("Error al abrir el documento. Mensaje: " + e) } var s = { taskID: e, docID: t, docTypeId: a, asDoc: n, docName: r, url: o, userID: i }; lsTabs.push(s) } function OpenPendingTabs(e) { if (0 == lsTabs.length) return !1; var t = lsTabs; return e && 0 == e ? ($(".modal-title").html("Abrir " + (t.length >= 2 ? t.length + " tareas" : "tarea")), $("#openTasks").on("show.bs.modal", function (e) { for (var a = "<strong>", n = 0; n <= t.length - 1; n++)a += "<li>" + t[n].docName + "</li></br>"; a += "</strong>", $(".tareasDiv").html(a), t.length >= 2 ? ($("#subTitleModal").html("Se cerraron inesperadamente las siguientes tareas:"), $("#questionModal").html(" ¿Desea volver a abrirlas?")) : ($("#subTitleModal").html("Se cerró inesperadamente la siguiente tarea:"), $("#questionModal").html(" ¿Desea volver a abrirla?")), $(this).find(".btn-ok").click(function (e) { try { $("#openTasks").modal("hide"), $("#NoTaskDiv").css("display", "none"), OpenNewTab(lsTabs[0]) } catch (e) { } }) }), $("#openTasks").modal().draggable()) : OpenNewTab(lsTabs[0]), !1 } function OpenTaskWithoutTab(e, t, a, n, r, o, i) { var s = thisDomain + "/views/WF/TaskSelector.ashx?DocTypeId=" + result.DOC_TYPE_ID + "&docid=" + result.DOC_ID + "&taskid=" + result.TASK_ID + "&wfstepid=" + stepid + "&userId=" + userid; window.open(s, "_blank") } function OpenDocTask2(e, t, a, n, r, o, i, s) { urlToOpen = o, docNameToOpen = r; try { e = e && "" != e ? parseInt(e) : 0, t = t && "" != t ? parseInt(t) : 0, i = i && "" != i ? parseInt(i) : "" } catch (e) { toastr.error("Error al abrir el documento. Mensaje: " + e) } try { var l = urlToOpen; e > 0 && l.indexOf("TaskSelector") <= 0 && l.indexOf("taskselector") <= 0 && (l = "../../views/WF/TaskSelector.ashx?DocTypeId=" + a + "&docid=" + t + "&taskid=" + e + "&wfstepid=" + s + "&userId=" + i), window.open(l, "_blank") } catch (e) { } return !1 } function OpenDocTask3(e, t, a, n, r, o, i, s, l) { urlToOpen = o, docNameToOpen = r; try { e = e && "" != e ? parseInt(e) : 0, t = t && "" != t ? parseInt(t) : 0, i = i && "" != i ? parseInt(i) : "" } catch (e) { toastr.error("Error al abrir el documento. Mensaje: " + e) } try { var c = urlToOpen; e > 0 && c.indexOf("TaskSelector") <= 0 && c.indexOf("taskselector") <= 0 && (c = thisDomain + "/views/WF/TaskSelector.ashx?DocTypeId=" + a + "&docid=" + t + "&taskid=" + e + "&wfstepid=" + s + "&userId=" + i), null == l && (l = 0), 0 == l && window.open(c, "_blank"), 1 == l && ShowIFrameModal2("", c, 800, 600), 2 == l && ShowIFrameHome(c, 600), 3 == l && window.open(c, "_blank") } catch (e) { } return !1 } function OpenDocTaskWithOutReference(e, t, a, n, r, o, i, s, l) { urlToOpen = o, docNameToOpen = r; try { e = e && "" != e ? parseInt(e) : 0, t = t && "" != t ? parseInt(t) : 0, i = i && "" != i ? parseInt(i) : "" } catch (e) { toastr.error("Error al abrir el documento. Mensaje: " + e) } try { var c = urlToOpen; e > 0 && c.indexOf("TaskSelector") <= 0 && c.indexOf("taskselector") <= 0 && (c = thisDomain + "/views/WF/TaskSelector.ashx?DocTypeId=" + a + "&docid=" + t + "&taskid=" + e + "&wfstepid=" + s + "&userId=" + i), null == l && (l = 0), 0 == l && window.open(c, "_blank", "noopener"), 1 == l && ShowIFrameModal2("", c, 800, 600), 2 == l && ShowIFrameHome(c, 600), 3 == l && window.open(c, "_blank", "noopener") } catch (e) { } return !1 } function ReloadIFTaskContent(e) { var t = "object" == typeof e ? e.children : e; if ($(t).contents().find("body").children().length || null == thisDomain) hideLoading(); else { var a = $(t).attr("src"); ".." == a.substring(0, 2) && (a = a.substring(3)), a = "views" != a.toLowerCase().substring(0, 5) && -1 == a.toLowerCase().indexOf(thisDomain.toLowerCase()) ? "Views/" + a : a.toLowerCase().replace(thisDomain.toLowerCase(), ""), $(t).attr("src", "/" != thisDomain.substring(thisDomain.length - 1) ? thisDomain + "/" + a : thisDomain + a) } } function GetIDError(e) { toastr.error("Error al abrir el documento. Mensaje: " + e.get_message()) } function parseDate(e) { var t = e.match(/(\d+)/g); if (null == t) return null; var a = t[0], n = t[1] - 1, r = t[2], o = new Date(r, n, a); return o && o.getMonth() == n && o.getDate() == a && o.getFullYear() == r ? o : null } function SetLoadingAnimationObserver() { if (1 == document.firstLoad) { var e = document.getElementsByTagName("*"), t = 0; if (1 == document.isLoading) { for (var a, n = !0; null != e[t] && 0 == n;)"interactive " != (a = e[t]).readyState && "complete" != a.readyState && (n = !1), t++; 1 == n ? (document.firstLoad = !1, hideLoading()) : setTimeout("SetLoadingAnimationObserver();", 1e3) } else document.firstLoad = !1, hideLoading() } } var ZDoc = document, ZVars, currentTag; function StartObjectLoadingObserverById(e) { StartObjectLoadingObserver(ZDoc.getElementById(e)) } function StartObjectLoadingObserver(e) { null != e && null != e.readyState || AddReadyState(e), ZDoc.arrLoadingElements || (ZDoc.arrLoadingElements = new Array), ZDoc.arrLoadingElements.push(e), ZDoc.pendingObjectsObserverStarted || StartPendingObjectsObserver() } function AddReadyState(e) { null != e && null != e && (e.readyState = "loading", $(e).on("load", function () { this.readyState = "complete" })) } function StartPendingObjectsObserver() { ZDoc.pendingObjectsObserverStarted = !0; var e = ZDoc.arrLoadingElements; if (e) { for (var t = e.length - 1; t > -1;) { if (!1, e[t]) { if ("interactive " != e[t].readyState && "complete" != e[t].readyState && "ctl00_WFExecForEntryRulesFrame" != e[t].id) return ShowLoadingAnimation(), void setTimeout("StartPendingObjectsObserver()", 1e3); document.arrLoadingElements.splice(t, 1), !0 } else document.arrLoadingElements.splice(t, 1); t-- } 0 == document.arrLoadingElements.length && (ZDoc.pendingObjectsObserverStarted = !1, hideLoading()) } } function ShowDeleteConfirmation() { ShowLoadingAnimation(), getBtnDelete().hide("2000"), $("#divDeleteConfirmation").show("3000"), hideLoading() } function HideDeleteConfirmation() { ShowLoadingAnimation(), $("#divDeleteConfirmation").hide("2000"), getBtnDelete().show("3000"), hideLoading() } function sortTable(e, t, a) { var n = e.tBodies[0]; if (null != n) { for (var r = [], o = 1, i = n.rows.length; o < i; o++) { var s = n.rows[o], l = s.cells[0].textContent || s.cells[t].innerText; l = "" != l && null != l ? parseDate(l) : a ? new Date(864e13) : new Date(-864e13), isNaN(l) || r.push([l, s]) } a ? r.sort(function (e, t) { return e[0] - t[0] }) : r.sort(function (e, t) { return t[0] - e[0] }); for (o = 0, i = r.length; o < i; o++)n.appendChild(r[o][1]); r = null } } function SetEditableColumns() { $(".editable").each(function () { $(this).attr("editablecolumns"); $("<td>").append($("<input>", { type: "text", val: $("<td>").val(), name: "title", class: "text", css: { width: "50px" } })) }) } function SetRuleIdAndZvar(e, t, a) { $("#hdnRuleId")[0].name = t, $("#hdnRuleId")[0].value = a } function SetRuleIdAndGrid(e, t, a, n) { var r; count = 0, ZVars = a, r = null == n || "" == n ? $(e).closest("table").children("tbody")[0] : $("#" + n).children("tbody")[0]; $("tr", r).each(function (e) { porcadatr(this, ZVars) }); zvargridresult += ")", $("#hdnRuleId")[0].name = t, $("#hdnRuleId")[0].value = ZVars.split("[")[0].replace("zvar(", "") + "=" + zvargridresult } var count = 0, zvargridresult = "totable("; function porcadatr(e, t) { if (currentTag = e, count > 0) { var a = t.split("]").join("").split(")").join("").split("["); a.splice(0, 1), $(a).each(function () { var e; e = null != $(currentTag).find("td:eq(" + this + ")").children("input").val() ? $(currentTag).find("td:eq(" + this + ")").children("input").val() : $(currentTag).find("td:eq(" + this + ")").text(), zvargridresult = zvargridresult + e + "|" }) } count++ , zvargridresult += ";" } function SetRuleIdAndGridWithNonCeros(e, t, a, n) { var r; count = 0, ZVars = a, r = null == n || "" == n ? $(e).closest("table").children("tbody")[0] : $("#" + n).children("tbody")[0]; $("tr", r).each(function (e) { porcadatrWithNonCeros(this, ZVars) }); zvargridresult = zvargridresult.substring(0, zvargridresult.length - 2) + ")", $("#hdnRuleId")[0].name = t, $("#hdnRuleId")[0].value = ZVars.split("[")[0].replace("zvar(", "") + "=" + zvargridresult } function porcadatrWithNonCeros(e, t) { if (currentTag = e, count > 0) { var a = "", n = t.split("]").join("").split(")").join("").split("["); n.splice(0, 1), $(n).each(function () { var e; e = null != $(currentTag).find("td:eq(" + this + ")").children("input").val() ? $(currentTag).find("td:eq(" + this + ")").children("input").val() : $(currentTag).find("td:eq(" + this + ")").text(), a = 5 == this && "0" == e ? "" : a + e + "|" }), zvargridresult += a } count++ , null != a && "" != a && (zvargridresult += ";") } function EnableDisableRule(e, t) { t ? ($("#zamba_rule_" + e).show(), $("#zamba_rule_" + e).css("display", "block")) : ($("#zamba_rule_" + e).hide(), $("#zamba_rule_" + e).css("display", "none")) } function SetRuleId(e) { $("#hdnRuleId")[0].name = e.id } function SetAsocId(e) { $("#hdnAsocId")[0].name = e.id, document.getElementsByTagName("form")[0].submit() } function SetNewGeneralExecution() { var e = window.parent.$("#WFExecForEntryRulesFrame"); 0 == e.length && (e = $("#WFExecForEntryRulesFrame")); e.contents().find("#hdnCurrTaskID").val(); 0 == e.length && void 0 !== e[0] && (e[0].contentWindow.location = "../../../Views/WF/WFExecutionForEntryRules.aspx"), null != e[0] ? (e[0].contentWindow.location = "about:blank", e[0].contentWindow.location = "../../../Views/WF/WFExecutionForEntryRules.aspx") : null != e.context && (e.context.location = "about:blank", e.context.location = "../../../Views/WF/WFExecutionForEntryRules.aspx"), e.on("load", function () { var e = $(this).parent().parent(), t = $(this).contents().children().height(); t > 0 && t <= 550 && (e.css("height", t + 50 + "px"), e.parent().css("height", t + 50 + "px")); var a = $(this).contents().children().width(); a > 0 && a <= 800 && (e.css("width", a + 40 + "px"), e.parent().css("width", a + 40 + "px")), t > 0 && t > 550 && (e.css("height", "250px").css("width", "684px"), e.parent().css("height", "320px").css("width", a + 20 + "px")) }) } function ShowGeneralRuleContainer() { var e = $("#EntryRulesContent").css("width", "600").css("height", "50%").css("top", "-1000").css("left", window.screen.width / 2 - e.width() / 2).show() } function ResizeGeneralRuleIframe() { $("#WFExecForEntryRulesFrame").css("width", $("#EntryRulesContent").width()).css("height", $("#EntryRulesContent").height()) } function RuleButtonClick(e) { $.ajax({ type: "POST", url: "../../../Services/TaskService.asmx/SetNewRuleExecution", data: "{ ruleId: " + e + ",userId:" + GetUID() + "}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (e) { SetNewGeneralExecution() }, error: function (e, t, a) { toastr.error("Error en la ejecucion de reglas \r" + e.responseText) } }) } function GetPipedSeparateValues(e) { for (var t = "", a = 0; a < e.length; a++)null != e[a] && "" != e[a] && (a > 0 && (t += "|"), t += $("#" + e[a]).val()); return t } function clearindexcache(e) { $.ajax({ type: "POST", url: "../../Services/IndexService.asmx/ClearIndexCache", data: "{'IndexId':" + e + "}", contentType: "application/json; utf-8", dataType: "json", success: function (e) { null != e.d && toastr.error(e.d) }, error: function (e, t, a) { } }) } function keepSessionAlive() { null == document.config && (document.config = parent.document.config), $.ajax({ type: "POST", url: "../../Services/TaskService.asmx/KeepSessionAlive", data: "", contentType: "application/json; charset=utf-8", success: function (e) { }, error: function (e, t) { }, dataType: "json" }), null != document.config && setTimeout("keepSessionAlive()", 27e4) } function clearAllCache() { localStorage && localStorage.clear(), $.ajax({ type: "POST", url: "../../Services/TaskService.asmx/ClearAllCache", data: "", contentType: "application/json; charset=utf-8", success: function (e) { toastr.success("Cache limpiado correctamente"), window.location.reload(!0) }, error: function (e, t) { toastr.error("Error al limpiar cache") }, dataType: "json" }), $.ajax({ type: "POST", url: ZambaWebRestApiURL + "/cache/ClearAllCache", data: "", contentType: "application/json; charset=utf-8", success: function (e) { toastr.success("Cache limpiado correctamente"), window.location.reload(!0) }, error: function (e, t) { toastr.error("Error al limpiar cache") }, dataType: "json" }) } function clearRulesCache() { localStorage && localStorage.clear(), $.ajax({ type: "POST", url: "../../Services/TaskService.asmx/ClearRulesCache", data: "", contentType: "application/json; charset=utf-8", success: function (e) { toastr.success("Cache limpiado correctamente"), window.location.reload(!0) }, error: function (e, t) { toastr.error("Error al limpiar cache") }, dataType: "json" }), $.ajax({ type: "POST", url: ZambaWebRestApiURL + "/cache/ClearRulesCache", data: "", contentType: "application/json; charset=utf-8", success: function (e) { toastr.success("Cache limpiado correctamente"), window.location.reload(!0) }, error: function (e, t) { toastr.error("Error al limpiar cache") }, dataType: "json" }) } function clearRightsCache() { localStorage && localStorage.clear(), $.ajax({ type: "POST", url: "../../Services/TaskService.asmx/ClearRightsCache", data: "", contentType: "application/json; charset=utf-8", success: function (e) { toastr.success("Cache limpiado correctamente"), window.location.reload(!0) }, error: function (e, t) { toastr.error("Error al limpiar cache") }, dataType: "json" }), $.ajax({ type: "POST", url: ZambaWebRestApiURL + "/cache/ClearRightsCache", data: "", contentType: "application/json; charset=utf-8", success: function (e) { toastr.success("Cache limpiado correctamente"), window.location.reload(!0) }, error: function (e, t) { toastr.error("Error al limpiar cache") }, dataType: "json" }) } function clearStructureCache() { localStorage && localStorage.clear(), $.ajax({ type: "POST", url: "../../Services/TaskService.asmx/ClearStructureCache", data: "", contentType: "application/json; charset=utf-8", success: function (e) { toastr.success("Cache limpiado correctamente"), window.location.reload(!0) }, error: function (e, t) { toastr.error("Error al limpiar cache") }, dataType: "json" }), $.ajax({ type: "POST", url: ZambaWebRestApiURL + "/cache/ClearStructureCache", data: "", contentType: "application/json; charset=utf-8", success: function (e) { toastr.success("Cache limpiado correctamente"), window.location.reload(!0) }, error: function (e, t) { toastr.error("Error al limpiar cache") }, dataType: "json" }) } function getAvailableWidth() { var e = $(window).width(); return 0 == e && (e = $(parent.$("#mainMenu")).width()), e } function addEvent(e, t, a) { var n = getSelectorId(e); $(n).on(t, a) } function getSelectorId(e) { return e.indexOf("#") > -1 ? e : "#" + e } var UseTaskTab = !1; function ResizeCurrentTab(e, t) { e > 0 && (-1 == t.toLowerCase().indexOf("taskviewer") && -1 == t.toLowerCase().indexOf("docviewer") || null != $("#TasksDivUL").find(".ui-tabs-selected").find("a")[0] && (idTabSelected = $("#TasksDivUL").find(".ui-tabs-selected").find("a")[0].href, $(idTabSelected).height(getHeightScreen() - getTBH()))) } function GetTaskAvailableHeight() { return getHeightScreen() - getTBH() } function ExtractIdFromUrl(e, t) { var a, n; return "doc" == t ? (a = e.indexOf("docid", 0) + 6, n = e.indexOf("&", a)) : (a = e.indexOf("taskid", 0) + 7, n = e.indexOf("&", a)), e.substr(a, n - a) } function loadCliksInRows() { null != $(".AltRowStyle").find("a") && ($(".AltRowStyle").click(function () { return $(this).find("a")[0] && window.open($(this).find("a")[0], "_blank", "", !1), !1 }), $(".AltRowStyle").find("a").click(function () { return window.open($(this).attr("href"), "_blank", "", !1), !1 })), null != $(".RowStyle").find("a") && ($(".RowStyle").click(function () { return $(this).find("a")[0] && window.open($(this).find("a")[0], "_blank", "", !1), !1 }), $(".RowStyle").find("a").click(function () { return window.open($(this).attr("href"), "_blank", "", !1), !1 })), null != $(".AltRowStyleTasks").find("a") && ($(".AltRowStyleTasks").click(function () { if ($(this).find("a")[0]) { var e = $(this).find(">td")[n(this)].innerText; return SwitchDocTaskForResults($(this).find("a")[0], !0, e), !1 } }), $(".AltRowStyleTasks").find("a").click(function () { var e = $(this).parent().parent().find("td")[n(this)].innerText; return SwitchDocTaskForResults($(this), !0, e), !1 })), a(this, $(".RowStyleTasks")); for (var e = $("iframe#IFTaskContent").contents().find("iframe#tabContent:visible"), t = 0; t < e.length; t++)a(this, $(e.contents()[t]).find("tr.RowStyleAsoc")); function a(e, t) { null != t.find("a") && (t.click(function () { if ($(this).find("a")[0]) { var e = $(this).find(">td")[n(this)].innerText; return SwitchDocTaskForResults($(this).find("a")[0], !0, e), !1 } }), t.find("a").click(function () { var e = $(this).parent().parent().find("td")[n(this)].innerText; return SwitchDocTaskForResults($(this), !0, e), !1 })) } function n(e) { return $(e).parents("table").attr("id").indexOf("Associated") > -1 ? $(e).parent().find(".HeaderStyle").find("th:contains('Name')").index() : $(e).parent().find(".HeaderStyle").find("th:contains('Tarea')").index() } null != $(".FormRowStyle").find("a") && ($(".FormRowStyle").click(function () { if ($(this).find("a")[0]) { var e = $(this).find(">td")[n(this)].innerText; return SwitchDocTaskForResults($(this).find("a")[0], !0, e), !1 } }), $(".FormRowStyle").find("a").click(function () { var e = $(this).parent().parent().find("td")[n(this)].innerText; return SwitchDocTaskForResults($(this), !0, e), !1 })), null != $(".RowStyleResults").find("a") && ($(".RowStyleResults").click(function () { if ($(this).find("a")[0]) { var e = $(this).find(">td")[n(this)].innerText; return SwitchDocTaskForResults($(this).find("a")[0], !0, e), !1 } }), $(".RowStyleResults").find("a").click(function () { var e = $(this).parent().parent().find("td")[n(this)].innerText; return SwitchDocTaskForResults($(this), !0, e), !1 })), null != $(".AltRowStyleResults").find("a") && ($(".AltRowStyleResults").click(function () { if ($(this).find("a")[0]) { var e = $(this).find(">td")[n(this)].innerText; return SwitchDocTaskForResults($(this).find("a")[0], !0, e), !1 } }), $(".AltRowStyleResults").find("a").click(function () { var e = $(this).parent().parent().find("td")[n(this)].innerText; return SwitchDocTaskForResults($(this), !0, e), !1 })) } function SwitchDocTaskForResults(e, t, a) { var n; n = GTUID(); var r = e.href; if (void 0 === r && (r = e[0].href), null != r && "" != r) { var o = getParameterByName("taskid", r = r.toLowerCase()); sessionStorage.removeItem("taskid"), sessionStorage.setItem("taskid", o), docid = getParameterByName("docid", r); var i = getParameterByName("doctypeid", r); "" == i && (i = getParameterByName("doctype", r)); var s = {}; if (s.userId = n, s.docTypeId = l, s.name = a, "" == o || "0" == o) { o = getParameterByName("docid", r); var l = getParameterByName("doctypeid", r); "" == l && (l = getParameterByName("doctype", r)), OpenDocTask3(0, o, l, !t, a, r, n) } else "" != o ? OpenDocTask3(o, 0, -1, !1, a, r, n) : toastr.error("Error al abrir una tarea, ID no especificado") } else toastr.error("Error al abrir una tarea, ID no especificado") } function OpenWindow(e) { window.open(e), $("#TasksDivUL").find("li").length > 0 && RefreshCurrentTab() } function MakeSearch() { parent.ViewResults() } function OpenDocTaskfronMaster2(e, t, a, n, r, o, i) { OpenDocTask3(e, t, a, n, r, o, i) } function ViewResults() { $("#MainTabber").zTabs("select", "#tabresults") } function ReloadFrame() { var e = document.frames ? document.frames.ContentPlaceHolder1_formBrowser : $("#ContentPlaceHolder1_formBrowser"), t = e.contentWindow || e, a = t.location; t.location.reload(), t.location = a } var unloadCount = 1, showedDialog = !1, unloadFromInsert = !1; function RefreshGrid(e) { switch (e) { case "tareas": $("#ContentPlaceHolder_wfiframe") } } function RefreshCurrentTab() { ShowLoadingAnimation(); var e = $("#TasksDiv").zTabs("activeAnchor").attr("href"); e = e.substr(e.indexOf("#")); var t = $(e).find(":first-child")[0], a = $(t); null != a && null != a[0] ? a[0].src = a[0].src : null != a.context && (a[0].src = a[0].src) } function RefreshTab(e) { var t = $(e).find(":first-child")[0], a = $(t); null != a && null != a[0] && (a[0].src = a[0].src) } function RefreshTask(e, t) { Refresh_C() } function CloseCurrentTask(e, t) { try { void 0 !== e && CloseTask(e, t), RefreshOpenerGrid(), window.close() } catch (e) { console.log(e) } } function RefreshOpenerGrid() { try { null != window.opener ? window.opener.$("#MyTasksAnchor").trigger("click") : null != $("#MyTasksAnchor") && $("#MyTasksAnchor").trigger("click") } catch (e) { console.log(e) } } function CheckAnyTaskOpen() { return 0 == $("#TasksDiv").tabs("length") } function InsertOpen() { window.open("/Views/Insert/Insert.aspx", this.target, "width=630,height=550,left=" + (screen.width - 600) / 2 + ",top=" + (screen.height - 580) / 2 + ",directories=no,status=no,menubar=no,toolbar=no,location=no,resizable=yes") } function InsertForm(e, t) { t ? (ShowIFrameModal("Insertar documentos", "../WF/DocInsertModal.aspx?formid=" + e + "&modal=true", 560, 580), StartObjectLoadingObserverById("IFDialogContent")) : location.href = "/Views/WF/DocInsert.aspx?formid=" + e } function AsociateForm(e, t, a, n, r, o, i, s) { ShowIFrameModal("Insertar documentos", "../WF/DocInsertModal.aspx?formid=" + e + "&DocID=" + t + "&DocTypeID=" + a + "&CallTaskID=" + n + "&ContinueWithCurrentTasks=" + r + "&DontOpenTaskAfterInsert=" + o + "&FillCommonAttributes=" + i + "&haveSpecificAtt=" + s, 800, 600), StartObjectLoadingObserverById("IFDialogContent") } function CloseInsert() { 0 == $("#openModalIF").length ? (parent.UnblockWebPageInteraction(), parent.$("#openModalIF").removeClass("in"), parent.$(".IFTaskContent").contents().find(".modal-backdrop").remove(), parent.$("#openModalIF").hide(), parent.$("#openModalIF").modal("hide")) : ($("#openModalIF").hide().modal("hide"), $("#openModalIF").is(":visible") && ($("#openModalIF").removeClass("in"), $(".modal-backdrop").length ? $(".modal-backdrop").remove() : $(".IFTaskContent").contents().find(".modal-backdrop").remove(), $("#openModalIF").hide()), UnblockWebPageInteraction()) } function FixAndPosition(e) { e.css("top", "100px"), e.css("position", "absolute"); var t = getMaxZ(); $(e).css({ "z-index": Math.round(t) }) } function OpenHome() { window.open($("#hdnLink").val(), $("#hdnTarget").val(), "", !1) } function ShowDivModal(e, t, a, n) { if (null != t.width() && t.width(), null != t.height() && t.height() + 100, $("#modalIframe").length >= 1) "" == e && ($("#openModalIF >div .modal-header").css("padding", 0), $("#openModalIF >div .modal-header >button").css("margin-right", 10)), $("#modalIframe").attr("src", "aboutblank.html").css("display", "none"), $("#modalFormTitle").html(e), $("#modalDivBody").html(t.html()).css("display", "block"), OpenModalIF.show(); else { "" == e && ($("#openModalIF >div .modal-header", window.parent.document).css("padding", 0), $("#openModalIF >div .modal-header >button", window.parent.document).css("margin-right", 10)); var r = $("#modalIframe", window.parent.document); 0 == r.length && (r = $("#modalFormHome", window.parent.document).children("iframe")), r.attr("src", "aboutblank.html").css("display", "none"), $("#modalFormTitle", window.parent.document).html(e), $("#modalDivBody", window.parent.document).html(t.html()).css("display", "block"), "function" != typeof $().modal && reloadBootstrap(), OpenModalIF.show() } } function ShowInsertAsociated(e) { ShowRuleSeccion(e) } function ShowRuleSeccion(e) { var t = '<iframe src="' + e + '" height="100%" width="100%"></iframe>'; parent.$("#liTabRule").css("display", "block"), parent.$("#tabRules").css("display", "block"), parent.$("#tabRules").html(t), parent.$("#rule").click() } function addpnlUcRulesToSeccion() { $("#rowTaskDetail").css("display", "none"), $("#rowTaskHeader").css("display", "none") } function ShowIFrameModal(e, t, a, n) { if ("" == e && $("#modalFormTitle").css("height", n - 200), $("#modalIframe").length >= 1) $("#modalIframe").attr("src", "aboutblank.html"), $("#modalDivBody").html("").css("display", "none"), $("#modalIframe").attr("src", t), $("#modalFormTitle").html(e), $("#modalIframe").css("width", a - 50).css("height", n - 100).css("display", "none"), "function" != typeof $().modal && reloadBootstrap(), $("#openModalIF").modal().draggable(), $("#modalIframe").ready(function () { $("#modalIframe").css("display", "block") }); else { var r = $("#modalIframe", window.parent.document); null == $("#modalIframe", window.parent.document).attr("src") && (r = $("#modalFormHome", window.parent.document).children("iframe")), r.length || (r = $("#openModalIF", window.parent.document).find("iframe")), $("#modalDivBody", window.parent.document).html("").css("display", "none"), r.css("display", "none"), "function" != typeof $().modal && reloadBootstrap(), OpenModalIF.show(), r.attr("src", "aboutblank.html"), $("#modalIframe").ready(function () { $("#modalIframe").css("display", "block"); var e = $("#modalIframe").contents().children().height(); e > 0 && e <= 550 && $("#modalIframe").parent().parent().css("height", e + 70 + "px"); var t = $("#modalIframe").contents().children().width(); t > 0 && t <= 800 && $("#modalIframe").parent().parent().css("width", t + "px"), event.stopImmediatePropagation(), event.stopPropagation() }), r.load(function (e) { var t = $(this).contents().children().height(); t > 0 && t <= 550 && $(this).parent().parent().css("height", t + 70 + "px"); var a = $(this).contents().children().width(); a > 0 && a <= 800 && $(this).parent().parent().css("width", a + "px"), e.stopImmediatePropagation(), e.stopPropagation() }), r.attr("src", t), $("#modalFormTitle", window.parent.document).html(e), r.parent().parent().find("#modalFormTitle").html(e) } } function ShowIFrameModal2(e, t, a, n) { var r = $("#modalIframe"), o = $("#openModalIF"); "function" != typeof $().modal && reloadBootstrap(), o.on("show", function () { var e = $("#modalIframe").contents().children().height(); (null == e || 0 == e || e < n) && (e = n), $("#openModalIF").css("height", e + 70 + "px"); var t = $("#modalIframe").contents().children().width(); (null == t || 0 == t || t < a) && (t = a), $("#openModalIF").css("width", t + "px") }), r.on("load", function () { var e = $("#modalIframe").contents().children().height(); (null == e || 0 == e || e < n) && (e = n), $("#openModalIF").css("height", e + 70 + "px"); var t = $("#modalIframe").contents().children().width(); (null == t || 0 == t || t < a) && (t = a), $("#openModalIF").css("width", t + "px") }), o.modal({ show: !0 }), r.attr("src", t) } function ShowIFrameHome(e, t) { var a = $("#tabhome").length >= 1 ? $("#tabhome") : $("#tabhome", window.parent.document), n = "glyphicon glyphicon-resize-full", r = "glyphicon glyphicon-resize-small", o = " Ocultar", i = " Expandir", s = document.createElement("div"), l = document.createElement("span"), c = document.createElement("span"); $(s).addClass("toogleIframe"), $(c).addClass(n).appendTo($(s)), $(l).text(i).appendTo($(s)); var d = $("#ContentPlaceHolder_pnlHomeButtons", parent.document); $(s).click(function () { d.slideToggle(), $(l).text($(l).text() == o ? i : o), $(c).attr("class", $(c).attr("class") == n ? r : n) }), $(s).insertBefore(d), d.slideToggle(); var u = document.createElement("iframe"); u.src = e, u.width = "100%", u.height = t - 100, u.id = "iframeHome"; var h = document.createElement("div"), m = document.createElement("span"); $(m).addClass(r).appendTo($(h)); var p = document.createElement("span"); $(p).text(o).appendTo($(h)); var f = document.createElement("span"); $(f).attr("class", "glyphicon glyphicon-remove-circle"), $(f).css("float", "right").css("margin-right", "5px").appendTo($(h)), $(h).addClass("toogleIframe").appendTo(a).click(function () { $(u).slideToggle(), $(p).text($(p).text() == o ? i : o), $(m).attr("class", $(m).attr("class") == n ? r : n) }), a.append(u), $(f).click(function () { $(u).remove(), $(h).remove(), $(l).text() == i && d.slideToggle(), $(s).remove() }) } function ShowChangePassDlg() { ShowIFrameModal("", "../../Views/Security/UsrPsswrd.aspx", 450, 250) } function CloseChangePassDlg() { $("#modalDialog").dialog("Close") } function ResizeInsertDialogToShow(e, t) { $("#TB_window").find(":first-child").height(e), void 0 !== t && $("#TB_iframeContent").width(t).height(e) } function HideDivPresentation() { 1e3 == $("#divPrimario").css("z-index") ? ($("#divPrimario").css("z-index", "3000"), $("#divSecundario").css("z-index", "1000")) : ($("#divPrimario").css("z-index", "1000"), $("#divSecundario").css("z-index", "3000")) } function SelectTabFromMasterPage(e) { var t; if ($("#DummyTab") && $("#DummyTab").remove(), 6 == $("#MainTabber >div").length) switch (e) { case "tabhome": t = 0; break; case "tabnews": t = 1; break; case "tabsearch": t = 2; break; case "tabresults": t = 3; break; case "tabtasklist": t = 4; break; case "tabtasks": t = 5 } else switch (e) { case "tabhome": t = 0; break; case "tabnews": t = 1; break; case "tabsearch": t = 2; break; case "tabresults": t = 3; break; case "tabInsert": t = 4; break; case "tabtasklist": t = 5; break; case "tabtasks": t = 6 }$("#MainTabber").tabs().tabs("option", "active", t), $("#divPrimario").hide(), $("#divSecundario").show() } function HomeCabPresentation() { } function SelectTaskFromModal() { $("#DummyTab") && $("#MainTabber").zTabs("remove", "#DummyTab"), $("#divPrimario").hide(), $("#divSecundario").show(), $("#MainTabber").zTabs("select", "#tabtasks"), $("#divReports") && $("#divReports").dialog("close"), $("#divSemaphore") && $("#divSemaphore").dialog("close") } function InsertFormModal(e) { ShowIFrameModal("", "../WF/DocInsertModal.aspx?formid=" + e, 800, 600) } function openWindow(e, t, a) { a && (t += "" == t ? ",screenX=0,screenY=0,left=0,top=0" : "screenX=0,screenY=0,left=0,top=0", t += ",width=" + (screen.availWidth - 10).toString(), t += ",height=" + (screen.availHeight - 30).toString()), WindowRef = window.open(e, "", t), null != WindowRef && (WindowRef.opener = self), WindowRef.focus() } function HideHome() { $("#divPrimario").hide(), $("#divSecundario").show() } function ResizeTBIframe(e, t) { t > 0 && ($("#TB_iframeContent").height(t), $("#TB_window").height(t)), e > 0 && ($("#TB_iframeContent").width(e), $("#TB_window").width(e)), $("#TB_window").css("overflow", "hidden") } function SetNewEntryRulesGroup() { SetNewGeneralExecution() } function ShowEntryRulesPanel(e) { var t = $("#EntryRulesContent"), a = $("#WFExecForEntryRulesFrame"); e && (t.css("top", $(document).height() / 2 - t.height() / 2).css("left", $(document).width() / 2 - t.width() / 2).show(), a.show()) } function CloseEntryRulesPanel() { $("#openModalIFWF").hide() } function ResizeEntryRulesPanel(e, t) { (t += 50) > 0 && ($("#EntryRulesContent").height(t), $("#WFExecForEntryRulesFrame").height(t)), e > 0 && ($("#EntryRulesContent").width(e), $("#WFExecForEntryRulesFrame").width(e)) } function RedirectToErrorPage(e) { window.onbeforeunload = function () { showedDialog = !0 }, document.location = e } function RedirectOpenerToLogin() { try { null == window.opener || window.opener.closed ? null != window.parent && window.parent.RedirectToLogin() : window.opener.RedirectToLogin() } catch (e) { } } function RedirectToLogin() { window.onbeforeunload = function () { showedDialog = !0 }; document.location = "../Security/Login.aspx" } function RedirectToSiteMap() { $("#divSem, #divTabDOR, #dvSiteMap, #divReports, #divTabSemaphore, #divGR").remove(); ShowIFrameModal("", "../Aysa/ZSiteMap.aspx", 400, 200) } function ZDispatcherRedirection_tabResult() { SelectTabFromMasterPage("tabsearch") } function ZDispatcherRedirection_tabSearchResults() { SelectTabFromMasterPage("tabresults") } function ZDispatcherRedirection_tabtasklist() { SelectTabFromMasterPage("tabtasklist"), $("#divPrimario").hide(), $("#divSecundario").show() } function ZDispatcherRedirection_tabtasks() { SelectTabFromMasterPage("tabtasks"), $("#divPrimario").hide(), $("#divSecundario").show() } function ShowInsertedDialog() { $("#divMessages").dialog({ autoOpen: !1, modal: !0, position: "center", closeOnEscape: !1, draggable: !1, resizable: !1, open: function (e, t) { $(".ui-dialog-titlebar-close").hide() } }), $("#divMessages").dialog("open") } function CloseInsertedDialog() { $("#divMessages").dialog("isOpen") && $("#divMessages").dialog("close") } function getMainMenuHeightFromParent() { return $("#mainMenu").outerHeight() } function getMTH() { return getMTHeight() } function getTBH() { return getTBHeight() } function SwitchToIFrameClass() { $("#second-div-presentation-Main").removeClass("second-div-presentation-Main").removeClass("second-div-IFrame").addClass("second-div-IFrame") } function btnHelpCab_Click() { window.open("../../forms/" + getPageTheme() + "/InstructivoZamba.pdf") } function getMaxZ() { var e = { inc: 10, group: "*" }; $.extend(e, { inc: 5 }); var t = 0; return $(e.group).each(function () { var e = parseInt($(this).css("z-index")); t = e > t ? e : t }), t += e.inc } function Refresh_C() { document.location = document.location, document.location.reload(!0) } function hideLoading() { } function BlockWebPageInteraction() { $("#MasterHeader").block({ message: null, overlayCSS: { backgroundColor: "transparent" } }), $("#mainMenu").block({ message: null, overlayCSS: { backgroundColor: "transparent" } }), $("#TasksDivUL").block({ message: null, overlayCSS: { backgroundColor: "transparent" } }) } function UnblockWebPageInteraction() { } function ConditionalEnable(e, t, a, n) { $("#" + e).val() == a || null != n && $("#" + e).val() == n ? ($("#" + t).removeClass("disable"), $("#" + t).valid(), $("#" + t).datepicker("enable"), $("#lbl_" + t).show(), $("#" + t).attr("disabled", ""), void 0 === $("#" + t).datepicker("option", "disabled") && $("#" + t).attr("disabled", "disabled")) : ($("#" + t).attr("disabled", "disabled"), $("#" + t).val(""), $("#" + t).addClass("disable"), $("#" + t).valid(), $("#lbl_" + t).hide(), $("#" + t).datepicker("disable")) } function ConditionalEnableFalse(e, t, a, n) { $("#" + e).val() != a && null != n && $("#" + e).val() != n ? ($("#" + t).removeClass("disable"), $("#" + t).valid(), $("#" + t).datepicker("enable"), $("#lbl_" + t).show(), $("#" + t).attr("disabled", ""), void 0 === $("#" + t).datepicker("option", "disabled") && $("#" + t).attr("disabled", "disabled")) : ($("#" + t).attr("disabled", "disabled"), $("#" + t).val(""), $("#" + t).addClass("disable"), $("#" + t).valid(), $("#lbl_" + t).hide(), $("#" + t).datepicker("disable")) } function ConditionalRequire(e, t, a, n) { $("#" + e).val() == a || null != n && $("#" + e).val() == n ? ($("#" + t).valid(), $("#lbl_" + t).show(), $("#" + t).addClass("required")) : ($("#" + t).removeClass("required"), $("#" + t).valid(), $("#lbl_" + t).hide()) } function ConvertToUpperForm() { $(".ConvertToUpper").each(function (e, t) { var a = $(t).val(); a = a.toUpperCase(), $(t).val(a) }) } function AddDynamicsTags() { 0 == $("#hdnRuleId").length && $("<input>").attr({ type: "hidden", id: "hdnRuleId", name: "hdnRuleId" }).appendTo("form"), 0 == $("#hdnAsocId").length && $("<input>").attr({ type: "hidden", id: "hdnAsocId", name: "hdnAsocId" }).appendTo("form"), 0 == $("#ZPOSTBACKFUNCTION").length && $("<input>").attr({ type: "hidden", id: "ZPOSTBACKFUNCTION", name: "ZPOSTBACKFUNCTION" }).appendTo("form"), 1 == $("form").length && $("form").each(function () { 0 != $(this).attr("id") && "" != $(this).attr("id") || $(this).attr("id", "MainForm") }) } function SelHeaderMenu(e) { if ("TasksDivUL" != e.parent().attr("id")) { "tasklist" == e.children().attr("id") && $(".RowStyleTasks, RowStyleAsoc").attr("draggable", !0); var t = e.children("a"), a = e.parent().find("a"); t.attr("id") != $("#mainMenu").data("activeHeader") && ($("#mainMenu").data("activeHeader", t.attr("id")), a.removeClass("inActiveHeaderTab").removeClass("activeHeaderTab").addClass("inActiveHeaderTab"), t.removeClass("inActiveHeaderTab").addClass("activeHeaderTab")) } } function SelTaskMenu(e) { if ("mainMenu" != e.parent().attr("id")) { e.attr("draggable", !0); var t = e.children("a"); e.parent().find("a").removeClass("inActiveTaskTab").removeClass("activeTaskTab").addClass("inActiveTaskTab"), t.removeClass("inActiveTaskTab").addClass("activeTaskTab").addClass("btn btn-default btn-xs") } } function setTabsHeight() { var e = $(window).height(), t = ($(window).width(), $("#MasterHeader > .navbar-header").height()), a = e - t; $("div#MainTabber div.MainTabberTabs").each(function () { $(this).height(a) }), $("body").css("padding-top", t), setTabTasksSize(a), setTabInsertSize(a) } function setTabInsertSize(e) { } function setTabTaskListSize(e, t) { if ($("#divTreeContainer").length > 0 && ($("#divTreeContainer").css("overflow", "auto"), $("#divTreeContainer").height(t - $("#spnToolbarTasksTree").outerHeight())), $("#TaskGridContent").length) { $("#TaskGridContent").css("overflow", "auto"); var a = $("#ContentPlaceHolder_TaskGrid_ucTaskGrid_pnlFilters"); a.length && a.outerHeight() > 0 ? $("#TaskGridContent").height(t - a.outerHeight()) : $("#TaskGridContent").height($("#divTreeContainer").height()) } } function setTabTasksSize(e) { if ($("#rowTaskDetail").length > 0) { var t = $("#TasksDivUL").length ? $("#TasksDivUL").height() : $("#TasksDivUL", parent.document).height(), a = $("#rowTaskHeader").length ? $("#rowTaskHeader").height() : 0; t > 0 ? a > 0 ? $("#rowTaskDetail").css("height", e - t - a) : $("#rowTaskDetail").css("height", e - t) : $("#rowTaskDetail").css("height", e) } } function toggleSidePanel(e) { $(e.target).parents("#tabtasklist").length ? togglePanel($("#tabtasklist").find(".slideSidePanel"), $("#tabtasklist").find(".slideMainPanel"), e) : togglePanel($("#tabsearch").find(".slideSidePanel"), $("#tabsearch").find(".slideMainPanel"), e) } function togglePanel(e, t, a) { if (null !== e) { var n = e.width() > 0; "click" === a.type ? n ? hidePanel(e, t) : showPanel(e, t) : $(window).width() > 768 && (n || showPanel(e, t)) } } function showPanel(e, t) { e.removeClass("sidePanelHidden"), t.removeClass("contentPanel"), $(".btnToggleSidePanel").removeClass("glyphicon glyphicon-menu-right").addClass("glyphicon glyphicon-menu-left"), $("#ContentPlaceHolder_Arbol_btnInsertar").length && $("#ContentPlaceHolder_Arbol_btnInsertar").removeClass("nonVisible") } function hidePanel(e, t) { e.addClass("sidePanelHidden"), t.addClass("contentPanel"), $(".btnToggleSidePanel").removeClass("glyphicon glyphicon-menu-left").addClass("glyphicon glyphicon-menu-right"), $("#ContentPlaceHolder_Arbol_btnInsertar").length && $("#ContentPlaceHolder_Arbol_btnInsertar").addClass("nonVisible") } function GetUID() { var e = 0; return (e = getUrlParameters().user) > 0 ? e : (e = getUrlParameters().userid) > 0 ? e : (e = getUrlParameters().u) > 0 ? e : void 0 } function GetDOCID() { var e = 0; return (e = getUrlParameters().docid) > 0 ? e : (e = getUrlParameters().did) > 0 ? e : (e = getUrlParameters().doc_id) > 0 ? e : (e = Number($("[id$=Hiddendocid]").val())) > 0 ? e : 0 } function GetTASKID() { var e = 0; return (e = getUrlParameters().taskid) > 0 ? e : (e = getUrlParameters().tid) > 0 ? e : (e = getUrlParameters().task_id) > 0 ? e : 0 } function GetDocTypeId() { var e = 0; try { return (e = getUrlParameters().doctype) > 0 ? e : (e = getUrlParameters().doc_type_id) > 0 ? e : e = getUrlParameters().dt_id } catch (t) { return console.error("No se pudo obtener el docTypeId", t), e } } function getUrlParameters() { var e, t, a = window.location.search.substring(1).split(/[&?]/), n = {}; for (e = 0; e < a.length; e++)(t = a[e].toLowerCase().split("="))[1] && (n[decodeURIComponent(t[0])] = decodeURIComponent(t[1])); return n } function getUrlParametersUser() { var e, t, a = window.location.search.substring(1).split(/[&?]/), n = {}; for (e = 0; e < a.length; e++)(t = a[e].toLowerCase().split("="))[1] && (n[decodeURIComponent(t[0])] = decodeURIComponent(t[1])); return n } function CheckUserTimeOut() { var e = localStorage.getItem("UserId"), t = localStorage.getItem("ConnId"); null != e && null != t ? $.ajax({ type: "POST", url: "../../Services/TaskService.asmx/CheckTimeOut", data: "{CurrentUserId: " + e + ", ConnectionId: " + t + "}", contentType: "application/json; charset=utf-8", success: function (a) { if (1 != a.d) return !1; parent.$("#openModalTimeout").modal(), $("#openModalTimeout").draggable(), t = 0, e = 0 } }) : $("#openModalTimeout").modal().draggable() } function showfilters() { $("#InputData").hasClass("IsShowing") ? $("#filterz").css({ display: "inline-table !important", left: "73% " }) : $("#filterz").css({ display: "inline-table !important", left: "49%" }), $("#filterz").slideToggle() } function EnableDropDown() { $(".dropdown-toggle, .customBtn").dropdown() } function GetSelectedTextValue(e) { e.options[e.selectedIndex].innerHTML; var t = e.value; $("#IndexValue").val(t), $("#InputData").css("display", "block").addClass("IsShowing") } function getTextValue() { var e = $("#DropVal").find(":selected").text(); $("#CompareOpe").val(e) } function takeIdSubList(e) { $("#IdSubList").val(""); angular.element($("body")).scope(); var t = $(e).find("td").html().replace(/\s/g, ""), a = $(e).find("td").next().html().replace(/\s/g, ""); $("#IdSubList").val(t), sessionStorage.setItem("SubListName", a) } function NewFilter() { null == document.config && (document.config = parent.document.config); var e = {}; e.CurrentUserId = $("[id$=hdnUserId]").val(), e.StepId = $("[id$=StepId]").val(), e.IndexId = $("#IndexValue").val(), e.CompareOperator = $("#CompareOpe").val(), "" != $("#IdSubList").val() ? e.ValueString = $("#IdSubList").val() : e.ValueString = $(".InputVal").children().val(), e && "" != $(".InputVal").children().val() ? $.ajax({ type: "POST", url: thisDomain + "/Services/TaskService.asmx/filterdata", data: "{filterdata:" + JSON.stringify(e) + "}", contentType: "application/json; charset=utf-8", success: function (e) { toastr.success("Filtro aplicado"), $("#IdSubList").val(""), GetUsedFilters() }, error: function (e, t, a) { toastr.error("Error al aplicar filtro filtro") } }) : toastr.error("Complete todos los campos") } function DeleteFilter(e) { null == document.config && (document.config = parent.document.config); var t = $(e.parentNode).children("a").attr("data-index"), a = {}; a.CurrentUserId = $("[id$=hdnUserId]").val(), a.StepId = $("[id$=StepId]").val(), a.Id = t, $.ajax({ type: "POST", url: thisDomain + "/Services/TaskService.asmx/deleteFilter", data: "{deleteFilter:" + JSON.stringify(a) + "}", contentType: "application/json; charset=utf-8", success: function (e) { $("#IdSubList").val("") } }) } function GetUsedFilters() { var e = {}; e.CurrentUserId = $("[id$=hdnUserId]").val(), e.StepId = $("[id$=StepId]").val(); sessionStorage.getItem("SubListName"); $.ajax({ type: "POST", url: "../../Services/TaskService.asmx/getUsedFilters", data: "{usedfilters:" + JSON.stringify(e) + "}", contentType: "application/json; charset=utf-8", success: function (e) { var t = e.d; $.each(t, function (e, t) { $("#filterz").append('<li><a name="tabs" data-index="' + t + '" href="#">"' + e + '" </a><button id="btnDeleteFilter" onclick="DeleteFilter(this)" class="btn btn-default btn-xs fa fa-trash"></button> </li>') }); var a = 0; for (var n in t) t.hasOwnProperty(n) && a++ , $("#counter").text("(" + a.toString() + ")") } }) } function GetOpenRules() { } function GoToTabHome() { $("#MainTabber").length > 0 ? $("#MainTabber").zTabs("select", "tabhome") : parent.$("#MainTabber").zTabs("select", "tabhome") } function LocationUrl() { var e = window.location.href.split("/"); return e[0] + "//" + e[2] + "//" + e[3] } function PrintBarcode(e, t, a, n) { console.log("Ejecutando PrintBarcode. Archivo: " + e + ". Copias: " + t + ". Ancho: " + a + ". Alto: " + n), $.ajax({ type: "POST", url: ZambaWebRestApiURL + "/Tasks/GeneratePdfCoverPage?" + jQuery.param({ TempPath: e, CopiesCount: t, Width: a, Height: n }), contentType: "application/json; charset=utf-8", async: !1, success: function (e) { PrintFile(LocationUrl() + "/" + e) } }) } function PrintFile(e) { console.log("Ejecutando PrintFile con documento: " + e), IsIE() ? window.open(e) : (window.parent.$("#printFrame").on("load", function () { console.log("Frame cargado"); var e = window.parent.document.getElementById("printFrame"); (e = e.contentWindow).focus(), e.print() }), window.parent.$("#printFrame").attr("src", e)) } function IsIE() { try { return !!(window.navigator.userAgent.indexOf("MSIE ") > 0 || navigator.userAgent.match(/Trident.*rv\:11\./)) } catch (e) { console.log(e) } } function tab_btn(e) { if ($("#zamba_index_72").val().length > 5) return swal("Se puede ingresar solo 4 caracteres"), document.getElementById("zamba_index_72").value = "", !1; if (9 == (e.keyCode ? e.keyCode : e.which ? e.which : e.charCode)) { var t, a = document.getElementById("zamba_index_72").value, n = a.length; switch (n) { case 1: t = "000" + a, document.getElementById("zamba_index_72").value = t; break; case 2: t = "00" + a, document.getElementById("zamba_index_72").value = t; break; case 3: t = "0" + a, document.getElementById("zamba_index_72").value = t; break; case 4: document.getElementById("zamba_index_72").value = a; break; default: n > 4 && (document.getElementById("zamba_index_72").value = a.substring(0, 4)) } } "zamba_index_72" == document.activeElement.name && (window.onclick = FuncionCeros) } function FuncionCeros() { var e, t = document.getElementById("zamba_index_72").value, a = t.length; switch (a) { case 1: e = "0000" + t, document.getElementById("zamba_index_72").value = e; break; case 2: e = "000" + t, document.getElementById("zamba_index_72").value = e; break; case 3: e = "00" + t, document.getElementById("zamba_index_72").value = e; break; case 4: e = "0" + t, document.getElementById("zamba_index_72").value = e; break; case 5: document.getElementById("zamba_index_72").value = t; break; default: a > 5 && (document.getElementById("zamba_index_72").value = t.substring(0, 5)) } } function tab_btn1(e) { if ($("#zamba_index_10").val().length >= 8) return swal("Se puede ingresar solo 8 caracteres"), document.getElementById("zamba_index_10").value = "", !1; if (9 == (e.keyCode ? e.keyCode : e.which ? e.which : e.charCode)) { var t, a = document.getElementById("zamba_index_10").value, n = a.length; switch (n) { case 1: t = "0000000" + a, document.getElementById("zamba_index_10").value = t; break; case 2: t = "000000" + a, document.getElementById("zamba_index_10").value = t; break; case 3: t = "00000" + a, document.getElementById("zamba_index_10").value = t; break; case 4: t = "0000" + a, document.getElementById("zamba_index_10").value = t; break; case 5: t = "000" + a, document.getElementById("zamba_index_10").value = t; break; case 6: t = "00" + a, document.getElementById("zamba_index_10").value = t; break; case 7: t = "0" + a, document.getElementById("zamba_index_10").value = t; break; case 8: document.getElementById("zamba_index_10").value = a; break; default: n > 8 && (document.getElementById("zamba_index_10").value = a.substring(0, 8)) } } "zamba_index_10" == document.activeElement.name && (window.onclick = FuncionCeros1) } function FuncionCeros1() { var e, t = document.getElementById("zamba_index_10").value, a = t.length; switch (a) { case 1: e = "0000000" + t, document.getElementById("zamba_index_10").value = e; break; case 2: e = "000000" + t, document.getElementById("zamba_index_10").value = e; break; case 3: e = "00000" + t, document.getElementById("zamba_index_10").value = e; break; case 4: e = "0000" + t, document.getElementById("zamba_index_10").value = e; break; case 5: e = "000" + t, document.getElementById("zamba_index_10").value = e; break; case 6: e = "00" + t, document.getElementById("zamba_index_10").value = e; break; case 7: e = "0" + t, document.getElementById("zamba_index_10").value = e; break; default: a > 8 && (document.getElementById("zamba_index_10").value = t.substring(0, 8)) } } function ponerdecimales(e) { var t = event.keyCode ? event.keyCode : event.which ? event.which : event.charCode; if (13 == t || 9 == t || null == t) { 13 == t && event.preventDefault(); var a = document.getElementById("zamba_index_109").value; "" == a && (document.getElementById("zamba_index_109").value = "000"), -1 == a.indexOf(",") & "" != a & -1 == a.indexOf(",00") && (document.getElementById("zamba_index_109").value = a), -1 == a.indexOf(",") && "" != a && (document.getElementById("zamba_index_109").value = a + ",00"), document.getElementById("zamba_index_109").value = document.getElementById("zamba_index_109").value.replace(".", "").replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ".") } 188 == t && event.preventDefault() } function AssociatedIndexsModalselectBtn(e) { var t = e.id, a = localStorage.getItem("NewAssociatedEntityId"), n = localStorage.getItem("NewAssociatedDocIds"), r = localStorage.getItem("NewAssociatedIndexIds"), o = localStorage.getItem("NewAssociatedruleId"); localStorage.getItem("NewAssociateddocId"); for ("string" == typeof n && (n = [n]), i = 0; i < n.length; i++)$.ajax({ type: "POST", url: ZambaWebRestApiURL + "/Tasks/UpdateTaskIndex?" + jQuery.param({ DoCTypeId: a, DocId: n[i], IndexId: r, Data: t }), contentType: "application/json; charset=utf-8", async: !1, success: function (e) { toastr.success("Archivo actualizado exitosamente"), $("#ModalSearchDropzone").modal("hide"); try { LoadGrillaForm(localStorage.getItem("NewAssociatedEntityId")) } catch (e) { } }, error: function (e) { console.log(e), toastr.success("Archivo actualizado exitosamente"), $("#ModalSearchDropzone").modal("hide") } }), "undefined" != o && ExecuteRuleIdDropzone(o, n[i]) } function FuncionDropzone(e, t, a, n, r) { localStorage.setItem("NewAssociatedIndexIds", e), localStorage.setItem("NewAssociatedEntityId", t), localStorage.setItem("NewAssociatedDocIds", a), localStorage.setItem("NewAssociatedruleId", n), localStorage.setItem("NewAssociateddocId", r); var o = localStorage.getItem("NewAssociatedEntityId") + localStorage.getItem("NewAssociatedIndexIds"); null == localStorage.getItem("ItemCache") ? dropzoneCallAjax(e, t) : localStorage.getItem("ItemCache") != o ? dropzoneCallAjax(e, t) : $("ul#listaID")[0].childElementCount <= 0 ? dropzoneCallAjax(e, t) : ($("#ModalSearchDropzone").modal(), 1 == $(".modal-backdrop").hasClass("in") && $(".modal-backdrop").css("position", "relative")) } function dropzoneCallAjax(e, t) { var a = ""; $.ajax({ type: "POST", url: ZambaWebRestApiURL + "/Tasks/GetAsociatedIndexsDropzon?" + jQuery.param({ indexId: e, entityId: t }), contentType: "application/json; charset=utf-8", async: !0, success: function (e) { a = e; var t = JSON.parse(a); $("#ModalSearchDropzone").modal(), 1 == $(".modal-backdrop").hasClass("in") && $(".modal-backdrop").css("position", "relative"); for (var n = 0; n < t.length; n++) { var r = t[n].Value, o = (t[n].$id, t[n].Code); "PF" != o && $("#listaID").append('<li class="ModalClassUl" id="' + o + '" name="' + r.toString() + '"  onclick="AssociatedIndexsModalselectBtn(this);">' + o + " - " + r.toString() + "</li>") } var i = localStorage.getItem("NewAssociatedEntityId") + localStorage.getItem("NewAssociatedIndexIds"); localStorage.setItem("ItemCache", i) }, error: function (e) { console.log(e) } }) } function ExecuteRuleIdDropzone(e, t) { var a = { UserId: parseInt(GetUID()), Params: { ruleId: e, resultIds: t } }; $.ajax({ async: !1, url: ZambaWebRestApiURL + "/tasks/ExecuteTaskRule", method: "POST", headers: { "content-type": "application/json" }, success: function () { toastr.success("Se ha ejecutado la acción") }, error: function () { toastr.error("Error al ejecutar acción") }, data: JSON.stringify(a) }) } function RemoveStyleMultiDropzone() { for (var e = $("zamba-drop"), t = 0; t < e.length; t++) { if ($("zamba-drop")[t].id > 0) "pointer-events" == $($("zamba-drop")[t]).children(2)[2].children[0].style[0] && $($("zamba-drop")[t]).children(2)[2].children[0].removeAttribute("style") } } function ExecuteRuleId(e, t) { var a = { UserId: parseInt(GetUID()), Params: { ruleId: e, resultIds: t } }; $.ajax({ async: !1, url: ZambaWebRestApiURL + "/tasks/ExecuteTaskRule", method: "POST", headers: { "content-type": "application/json" }, success: function () { return console.log("Se ha ejecutado la acción"), !0 }, error: function () { return console.log("Error al ejecutar acción"), !1 }, data: JSON.stringify(a) }) } function FixsIE() { try { Array.prototype.includes || Object.defineProperty(Array.prototype, "includes", { enumerable: !1, value: function (e) { return this.filter(function (t) { return t == e }).length > 0 } }), Array.prototype.indexOf || (Array.prototype.indexOf = function (e, t) { for (var a = t || 0, n = this.length; a < n; a++)if (this[a] === e) return a; return -1 }), String.prototype.repeat || (String.prototype.repeat = function (e) { "use strict"; if (null == this) throw new TypeError("can't convert " + this + " to object"); var t = "" + this; if ((e = +e) != e && (e = 0), e < 0) throw new RangeError("repeat count must be non-negative"); if (e == 1 / 0) throw new RangeError("repeat count must be less than infinity"); if (e = Math.floor(e), 0 == t.length || 0 == e) return ""; if (t.length * e >= 1 << 28) throw new RangeError("repeat count must not overflow maximum string size"); var a = t.length * e; for (e = Math.floor(Math.log(e) / Math.log(2)); e;)t += t, e--; return t += t.substring(0, a - t.length) }), String.prototype.padStart || (String.prototype.padStart = function (e, t) { return e >>= 0, t = String(void 0 !== t ? t : " "), this.length >= e ? String(this) : ((e -= this.length) > t.length && (t += t.repeat(e / t.length)), t.slice(0, e) + String(this)) }) } catch (e) { } } function CompletarVto() { if ("" == document.getElementById("zamba_index_57").value) $("#zamba_index_57").addClass("error"); else { $("#zamba_index_57").removeClass("error"); var e = $("#zamba_index_1525190").val(), t = $("#zamba_index_57").val(); t = CalcularLaborales(e, t), "" == e || null == e ? $("#zamba_index_2705").val("0") : $("#zamba_index_2705").val(t) } } function CalcularLaborales(e, t) { var a = GetDD(t), n = GetMM(t), r = GetYY(t); return new Date(r, n, a).SumarLaborables(e).format("d/m/Y") } function GetDD(e) { return parseInt(e.substr(0, 2), 10) } function GetMM(e) { return parseInt(e.substr(3, 2), 10) - 1 } function GetYY(e) { return parseInt(e.substr(6)) } function comprobarSiBisisesto(e) { return e % 100 != 0 && (e % 4 == 0 || e % 400 == 0) } function finMes(e) { var t = 0; switch (parseInt(e.value.substr(3, 2), 10)) { case 1: t = 31; break; case 2: t = 29; break; case 3: t = 31; break; case 4: t = 30; break; case 5: t = 31; break; case 6: t = 30; break; case 7: case 8: t = 31; break; case 9: t = 30; break; case 10: t = 31; break; case 11: t = 30; break; case 12: t = 31 }return t } function valSep(e) { var t; if (e.value.indexOf("/") > -1 ? t = "/" : e.value.indexOf("-") > -1 && (t = "-"), !(t.length > 0)) return swal("Los días, meses y años deben estar separados por el caracter / o el -"), !1; if (e.value.indexOf(t) != e.value.lastIndexOf(t)) { if (2 != e.value.indexOf(t) && (e.value = "0" + e.value, 2 != e.value.indexOf(t))) return !1; if (5 != e.value.lastIndexOf(t)) { var a = e.value.substring(0, 3), n = e.value.substring(3); if (e.value = a + "0" + n, 5 != e.value.lastIndexOf(t)) return !1 } return !0 } } function valDia(e) { var t = !1, a = parseInt(e.value.substr(0, 2), 10); return t = t || a >= 1 && a <= finMes(e) } function valMes(e) { var t = !1, a = parseInt(e.value.substr(3, 2), 10); return t = t || a >= 1 && a <= 12 } function valAno(e) { var t = !0, a = e.value.substr(6); if (t = t && (2 == a.length || 4 == a.length)) for (var n = 0; n < a.length; n++)t = t && esDigito(a.charAt(n)); return t } function ShowErrorMessage(e, t) { swal(t), $("#hdnRuleId").name = "zamba_cancel", setTimeout(function () { parent.hideLoading() }, 250), e.preventDefault() } function SaveDocument(e) { e.getElementById("hdnRuleId").name = "zamba_save" } function CheckMaxLength(e) { var t = parseInt(e.getAttribute("maxlength"), 10); return e.value.length < t } function CheckMaxLengthAfterLosingFocus(e) { var t = parseInt(e.getAttribute("maxlength"), 10); e.value.length > t && (swal("Se ha superado el límite máximo de " + t + " caracteres.Se truncará dicho texto hasta el límite."), e.value = e.value.substring(0, t)) } function DecimalCheck(e) { return /^\d*\.?\d{0,2}$/.test(e.val()) ? (e.removeClass("error"), !0) : (e.addClass("error"), !1) } function IntegerCheck(e) { if (8 != e.which && 0 != e.which && (e.which < 48 || e.which > 57)) return !1 } function isNumeric(e) { return "number" == typeof e || /^\+|-?[0-9]+([,\.][0-9]*)?$/.test(e) } function PorcentualCheck(e) { var t = e.val(); return t >= 0 && t <= 100 && /^\d*\.?\d{0,2}$/.test(t) ? (e.removeClass("error"), !0) : (e.addClass("error"), !1) } function Redondear(e) { return Math.round(100 * e) / 100 } function CargarFechaIndice(e) { $("#" + e).datepicker({ changeMonth: !0, changeYear: !0, showOn: "button", buttonText: "Abrir calendario", buttonImage: "calendar.png", buttonImageOnly: !0, duration: "" }) } function esDigito(e) { var t = e.charCodeAt(0); return t > 47 && t < 58 } function valSep(e) { var t; if (e.value.indexOf("/") > -1 ? t = "/" : e.value.indexOf("-") > -1 && (t = "-"), !(t.length > 0)) return swal("Los días, meses y años deben estar separados por el caracter / o el -"), !1; if (e.value.indexOf(t) != e.value.lastIndexOf(t)) { if (2 != e.value.indexOf(t) && (e.value = "0" + e.value, 2 != e.value.indexOf(t))) return !1; if (5 != e.value.lastIndexOf(t)) { var a = e.value.substring(0, 3), n = e.value.substring(3); if (e.value = a + "0" + n, 5 != e.value.lastIndexOf(t)) return !1 } return !0 } } function finMes(e) { var t = 0; switch (parseInt(e.value.substr(3, 2), 10)) { case 1: t = 31; break; case 2: t = 29; break; case 3: t = 31; break; case 4: t = 30; break; case 5: t = 31; break; case 6: t = 30; break; case 7: case 8: t = 31; break; case 9: t = 30; break; case 10: t = 31; break; case 11: t = 30; break; case 12: t = 31 }return t } function valDia(e) { var t = !1, a = parseInt(e.value.substr(0, 2), 10); return t = t || a >= 1 && a <= finMes(e) } function valMes(e) { var t = !1, a = parseInt(e.value.substr(3, 2), 10); return t = t || a >= 1 && a <= 12 } function valAno(e) { var t = !0, a = e.value.substr(6); if (t = t && (2 == a.length || 4 == a.length)) for (var n = 0; n < a.length; n++)t = t && esDigito(a.charAt(n)); return t } function valFecha(e) { var t = !0; "" != e.value && ((t = (t = (t = (t = t && valSep(e)) && valAno(e)) && valMes(e)) && valDia(e)) || swal("La fecha ingresada es invalida")) } function CalcularLaborales(e, t) { var a = GetDD(t), n = GetMM(t), r = GetYY(t); return new Date(r, n, a).SumarLaborables(e).format("d/m/Y") } function GetDD(e) { return parseInt(e.substr(0, 2), 10) } function GetMM(e) { return parseInt(e.substr(3, 2), 10) - 1 } function GetYY(e) { return parseInt(e.substr(6)) } function comprobarSiBisisesto(e) { return e % 100 != 0 && (e % 4 == 0 || e % 400 == 0) } function forceKeyPressUppercase(e) { var t = e.keyCode; if (t >= 97 && t <= 122 && !(e.ctrlKey || e.shiftKey || e.metaKey || e.altKEY)) { var a = t - 32, n = e.target.selectionStart, r = e.target.selectionEnd; e.target.value = e.target.value.substring(0, n) + String.fromCharCode(a) + e.target.value.substring(r), e.target.setSelectionRange(n + 1, n + 1), e.preventDefault() } } function iframetog() { var e = document.getElementById("iframeStyle"); "none" === e.style.display ? e.style.display = "block" : e.style.display = "none" } function requerido() { var e = $("form").find("input.requerido").length, t = new Array; for (i = 0; i < e; i++)if ("" == $("form").find("input.requerido")[i].value) { var a = $("form").find("input.requerido")[i].id; r = (r = $("#" + a).parent()[0].innerText).replace(":", ""), t.push(r) } var n = $("form").find("select.requerido").length; new Array; for (i = 0; i < n; i++)if ("" == $("form").find("select.requerido")[i].value) { var r; a = $("form").find("select.requerido")[i].id; r = (r = $("#" + a).parent()[0].innerText).replace(":", ""), t.push(r) } return t } function isAnyRequeredFieldEmpty() { var e = requerido(), t = !1; return e.length > 0 && (swal("", "Por favor, ingrese " + e.toString().replace(/,/g, " - "), "error"), t = !0), t } function ValidateNumberOfCharacters(e, t, a) { null == t || e == t.length || 0 == e || swal("", "El campo " + a + " debe tener " + e + " digitos", "warning") } function dateFormatMMDDYYYY(e) { var t = e.split("/"); return new Date(t[2], t[1] - 1, t[0]) } function BtnGrillaClick() { $(".rowTzamba_associated_documents_101 > td").off("click") } function OpenHelp(e, t) { var a = '"directories=no,titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,top=100,left=100,width=800,height=480,title=' + t + '"'; window.open(e, "_blank", a) } function myfunction() { swal("The Internet?", "That thing is still around?", "question") } function check(e) { return tecla = document.all ? e.keyCode : e.which, 8 == tecla || (patron = /^[A-Za-z0-9\s]+$/g, tecla_final = String.fromCharCode(tecla), patron.test(tecla_final)) } function GetGroupsIdsByUserId(e) { var t = []; try { if (localStorage) { var a = localStorage.getItem("localGroups" + GetUID()); if (null != a && null != a && a.length > 0) return t = a } } catch (e) { console.log(e) } return 0 == t.length && $.ajax({ type: "GET", async: !1, url: ZambaWebRestApiURL + "/search/GetGroupsByUserIds", data: { usrID: e }, success: function (e) { if (null != e && null != e) { t = e; try { localStorage && localStorage.setItem("localGroups" + GetUID(), e) } catch (e) { console.log(e) } } }, error: function (e, t, a) { console.log(a) } }), t } function ValidarEstudioConsulta() { $.ajax({ type: "GET", async: !1, url: ZambaWebRestApiURL + "/search/GetGroupsByUserIds", data: { usrID: id }, success: function (e) { groups = e }, error: function (e, t, a) { console.log(a) } }) } function LoadGrillaForm(e) { var t = document.getElementsByTagName("zamba-associated"); if (null != t) { CountGrilla = document.getElementsByTagName("zamba-associated").length; for (var a = 0; a < CountGrilla; a++)(t = document.getElementsByTagName("zamba-associated")[a].attributes.entities.nodeValue) == e && document.getElementsByTagName("zamba-associated")[a].querySelector(".BtnRefresh").click() } } function validateAttribute(e) { var t = $("#" + e).val(); return null != t && "" != t } function saveIndexValidated(e, t, a, n, r) { var o = !1, i = { UserId: parseInt(GetUID()), Params: { indexId: e, entityId: t, parentResultId: a, taskId: n, indexValue: r } }; return $.ajax({ type: "POST", url: serviceBase + "/search/setTaskIndex", data: JSON.stringify(i), contentType: "application/json; charset=utf-8", async: !1, success: function (e, t, a, n) { o = e } }), o } function saveIndexsValidated(e, t, a, n) { var r = !1, o = { UserId: parseInt(GetUID()), Params: { indexs: e, entityId: t, resultId: a, taskId: n } }; return $.ajax({ type: "POST", url: serviceBase + "/search/setTaskIndexs", data: JSON.stringify(o), contentType: "application/json; charset=utf-8", async: !1, success: function (e, t, a, n) { r = e } }), r } function executeTaskRule(e, t, a, n) { parseInt(GetUID()); try { var r = angular.element($("#taskController")).scope(); r.ExecuteRule(e, t).then(function (e) { if (console.log("Se ejecutó correctamente."), null != e.data && "" != e.data) { var t = JSON.parse(e.data); null !== t.results && void 0 !== t.results && (r.Task = t.results[0]), a && a(t) } else location.reload() }).catch(function (e) { console.log(e), n && n(e) }) } catch (e) { console.log(e), n && n(fallback) } } function processResultUpdates(e, t) { try { e.results.forEach(function (e) { e.Indexs.forEach(function (e) { if ((null == t || null == t || -1 != t.indexOf(e.ID)) && "" != e.Data) { var a = $("#zamba_index_" + e.ID); a && ("" != e.dataDescription ? a.val(e.dataDescription) : a.val(e.Data)) } }) }), toastr.success("Datos actualizados") } catch (e) { toastr.success("Error al obtener datos") } } function cleanIndexs(e) { try { e.forEach(function (e) { var t = $("#zamba_index_" + e); t && t.val("") }) } catch (e) { toastr.success("Error al obtener datos") } } function getElementFromQueryString(e) { var t = window.location.href.split("&"), a = null; return t.forEach(function (t) { t.includes(e) && (a = t.split("=")[1]) }), a } function NotRecharged() { return "Esta seguro que desea salir" } function EnableAttributeBIfAttributeAIsEmpty(e, t) { null != $(e) && "" != $(e).val() ? $(t).hide() : $(t).show() } function EnableAttributeBIfAttributeAIsNotEmpty(e, t) { null == $(e) || "" == $(e).val() ? $(t).hide() : $(t).show() } function EnableIfIsEmptyA(e, t) { null != $(e) && "" != $(e).val() ? $(t).show() : $(t).hide() } function parametroURL(e) { var t = null; return location.search && location.search.substr(1).split("&").forEach(function (a) { var n = a.split("="), r = n[0], o = n[1] && decodeURIComponent(n[1]); r == e && (null == t ? t = o : Array.isArray(t) ? t.push(o) : t = [t, o]) }), t } function ExecutetaskRuleWithConfirmMessage(e, t, a, n) { return swal(e, "", "warning", { buttons: { cancel: "No", catch: { text: "Si", value: "catch" } } }).then(function (e) { switch (e) { case "catch": return executeTaskRule(t, GetDOCID(), a, n), !0; default: return !1 } }), !1 } function MessageForTextArea(e, t) { swal({ title: "Motivo de Rechazo", text: "Observaciones", icon: "info", content: { element: "input", attributes: { type: "text", id: "InputObservacion", placeholder: "Agregar Observacion" } }, buttons: { cancel: "cancelar", catch: { text: "Guardar", value: "catch" } } }).then(function (a) { switch (a) { case "catch": var n = $("#InputObservacion").val(); swal("", e, "warning", { buttons: { cancel: "Cancelar", catch: { text: "Confirmar", value: "catch" } } }).then(function (e) { switch (e) { case "catch": var a = $(".TextIndexer").attr("id").split("_")[2], r = getElementFromQueryString("DocType"), o = getElementFromQueryString("docid"), i = 0; if (null == r && (i = getElementFromQueryString("taskid"), r = 0), 0 == saveIndexValidated(a, r, o, i, n)) { var s = angular.element($("#appobs")).scope(); s.InputObservacion = n, s.AgregarObservacion(), SetRuleId(t), swal("", "Observacion agregada exitosamente", "success") } else swal("", "Error al agregar la observacion", "error") } }) } }) } function zamba_save_onclick(e, t) { var a = !1; new Date; try { if (null != t && null != t) { var n = t.split(","); for (var t in n) { var r = $("#zamba_index_" + n[t]), o = $("#zamba_index_" + n[t - 1]); "" == r.val() || null == r.val() ? (swal("", "Por favor verifique el campo " + r.attr("indexname"), ""), a = !1) : "" != r.val() && "" == o.val() ? (swal("", "Por favor verifique el campo " + o.attr("indexname"), ""), a = !1) : a = !!ConfirmMessage("Esta seguro que desea avanzar?", e) } } else a = !0 } catch (e) { swal("", "Por favor, verificar los datos ingresados"), console.log(e) } return a } function RefreshCurrentPage() { window.location.reload() } function GenericFunctionNumericStye() { for (var e = 0; e < $("input").length; e++)null != $("input")[e].getAttribute("class") && "null" != $("input")[e].getAttribute("class") && $("input")[e].getAttribute("class").contains("form-control") && null != $("input")[e].getAttribute("datatype") && "null" != $("input")[e].getAttribute("datatype") && $("input")[e].getAttribute("datatype").contains("numeric") && ($("input")[e].className += " inpusize") } String.prototype.replaceAll = function (e, t) { return this.split(e).join(t) }, Date.prototype.SumarLaborables = function (e) { for (var t = 0; t < e; t++)this.setTime(this.getTime() + 864e5), 6 != this.getDay() && 0 != this.getDay() || t--; return this }, Date.prototype.format = function (e) { for (var t = "", a = Date.replaceChars, n = 0; n < e.length; n++) { var r = e.charAt(n); n - 1 >= 0 && "\\" == e.charAt(n - 1) ? t += r : a[r] ? t += a[r].call(this) : "\\" != r && (t += r) } return t }, Date.replaceChars = { shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], longMonths: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], longDays: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], d: function () { return (this.getDate() < 10 ? "0" : "") + this.getDate() }, D: function () { return Date.replaceChars.shortDays[this.getDay()] }, j: function () { return this.getDate() }, l: function () { return Date.replaceChars.longDays[this.getDay()] }, N: function () { return this.getDay() + 1 }, S: function () { return this.getDate() % 10 == 1 && 11 != this.getDate() ? "st" : this.getDate() % 10 == 2 && 12 != this.getDate() ? "nd" : this.getDate() % 10 == 3 && 13 != this.getDate() ? "rd" : "th" }, w: function () { return this.getDay() }, z: function () { var e = new Date(this.getFullYear(), 0, 1); return Math.ceil((this - e) / 864e5) }, W: function () { var e = new Date(this.getFullYear(), 0, 1); return Math.ceil(((this - e) / 864e5 + e.getDay() + 1) / 7) }, F: function () { return Date.replaceChars.longMonths[this.getMonth()] }, m: function () { return (this.getMonth() < 9 ? "0" : "") + (this.getMonth() + 1) }, M: function () { return Date.replaceChars.shortMonths[this.getMonth()] }, n: function () { return this.getMonth() + 1 }, t: function () { var e = new Date; return new Date(e.getFullYear(), e.getMonth(), 0).getDate() }, L: function () { var e = this.getFullYear(); return e % 400 == 0 || e % 100 != 0 && e % 4 == 0 }, o: function () { var e = new Date(this.valueOf()); return e.setDate(e.getDate() - (this.getDay() + 6) % 7 + 3), e.getFullYear() }, Y: function () { return this.getFullYear() }, y: function () { return ("" + this.getFullYear()).substr(2) }, a: function () { return this.getHours() < 12 ? "am" : "pm" }, A: function () { return this.getHours() < 12 ? "AM" : "PM" }, B: function () { return Math.floor(1e3 * ((this.getUTCHours() + 1) % 24 + this.getUTCMinutes() / 60 + this.getUTCSeconds() / 3600) / 24) }, g: function () { return this.getHours() % 12 || 12 }, G: function () { return this.getHours() }, h: function () { return ((this.getHours() % 12 || 12) < 10 ? "0" : "") + (this.getHours() % 12 || 12) }, H: function () { return (this.getHours() < 10 ? "0" : "") + this.getHours() }, i: function () { return (this.getMinutes() < 10 ? "0" : "") + this.getMinutes() }, s: function () { return (this.getSeconds() < 10 ? "0" : "") + this.getSeconds() }, u: function () { return "Not Yet Supported" }, e: function () { return "Not Yet Supported" }, I: function () { return "Not Yet Supported" }, O: function () { return (-this.getTimezoneOffset() < 0 ? "-" : "+") + (Math.abs(this.getTimezoneOffset() / 60) < 10 ? "0" : "") + Math.abs(this.getTimezoneOffset() / 60) + "00" }, P: function () { return (-this.getTimezoneOffset() < 0 ? "-" : "+") + (Math.abs(this.getTimezoneOffset() / 60) < 10 ? "0" : "") + Math.abs(this.getTimezoneOffset() / 60) + ":00" }, T: function () { var e = this.getMonth(); this.setMonth(0); var t = this.toTimeString().replace(/^.+ \(?([^\)]+)\)?$/, "$1"); return this.setMonth(e), t }, Z: function () { return 60 * -this.getTimezoneOffset() }, c: function () { return this.format("Y-m-d\\TH:i:sP") }, r: function () { return this.toString() }, U: function () { return this.getTime() / 1e3 } }, String.prototype.trim = function () { return this.replace(/^\s*/, "").replace(/\s*$/, "") }, Date.prototype.SumarLaborables = function (e) { for (var t = 0; t < e; t++)this.setTime(this.getTime() + 864e5), 6 != this.getDay() && 0 != this.getDay() || t--; return this }, Date.prototype.format = function (e) { for (var t = "", a = Date.replaceChars, n = 0; n < e.length; n++) { var r = e.charAt(n); n - 1 >= 0 && "\\" == e.charAt(n - 1) ? t += r : a[r] ? t += a[r].call(this) : "\\" != r && (t += r) } return t }, Date.replaceChars = { shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], longMonths: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], longDays: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], d: function () { return (this.getDate() < 10 ? "0" : "") + this.getDate() }, D: function () { return Date.replaceChars.shortDays[this.getDay()] }, j: function () { return this.getDate() }, l: function () { return Date.replaceChars.longDays[this.getDay()] }, N: function () { return this.getDay() + 1 }, S: function () { return this.getDate() % 10 == 1 && 11 != this.getDate() ? "st" : this.getDate() % 10 == 2 && 12 != this.getDate() ? "nd" : this.getDate() % 10 == 3 && 13 != this.getDate() ? "rd" : "th" }, w: function () { return this.getDay() }, z: function () { var e = new Date(this.getFullYear(), 0, 1); return Math.ceil((this - e) / 864e5) }, W: function () { var e = new Date(this.getFullYear(), 0, 1); return Math.ceil(((this - e) / 864e5 + e.getDay() + 1) / 7) }, F: function () { return Date.replaceChars.longMonths[this.getMonth()] }, m: function () { return (this.getMonth() < 9 ? "0" : "") + (this.getMonth() + 1) }, M: function () { return Date.replaceChars.shortMonths[this.getMonth()] }, n: function () { return this.getMonth() + 1 }, t: function () { var e = new Date; return new Date(e.getFullYear(), e.getMonth(), 0).getDate() }, L: function () { var e = this.getFullYear(); return e % 400 == 0 || e % 100 != 0 && e % 4 == 0 }, o: function () { var e = new Date(this.valueOf()); return e.setDate(e.getDate() - (this.getDay() + 6) % 7 + 3), e.getFullYear() }, Y: function () { return this.getFullYear() }, y: function () { return ("" + this.getFullYear()).substr(2) }, a: function () { return this.getHours() < 12 ? "am" : "pm" }, A: function () { return this.getHours() < 12 ? "AM" : "PM" }, B: function () { return Math.floor(1e3 * ((this.getUTCHours() + 1) % 24 + this.getUTCMinutes() / 60 + this.getUTCSeconds() / 3600) / 24) }, g: function () { return this.getHours() % 12 || 12 }, G: function () { return this.getHours() }, h: function () { return ((this.getHours() % 12 || 12) < 10 ? "0" : "") + (this.getHours() % 12 || 12) }, H: function () { return (this.getHours() < 10 ? "0" : "") + this.getHours() }, i: function () { return (this.getMinutes() < 10 ? "0" : "") + this.getMinutes() }, s: function () { return (this.getSeconds() < 10 ? "0" : "") + this.getSeconds() }, u: function () { return "Not Yet Supported" }, e: function () { return "Not Yet Supported" }, I: function () { return "Not Yet Supported" }, O: function () { return (-this.getTimezoneOffset() < 0 ? "-" : "+") + (Math.abs(this.getTimezoneOffset() / 60) < 10 ? "0" : "") + Math.abs(this.getTimezoneOffset() / 60) + "00" }, P: function () { return (-this.getTimezoneOffset() < 0 ? "-" : "+") + (Math.abs(this.getTimezoneOffset() / 60) < 10 ? "0" : "") + Math.abs(this.getTimezoneOffset() / 60) + ":00" }, T: function () { var e = this.getMonth(); this.setMonth(0); var t = this.toTimeString().replace(/^.+ \(?([^\)]+)\)?$/, "$1"); return this.setMonth(e), t }, Z: function () { return 60 * -this.getTimezoneOffset() }, c: function () { return this.format("Y-m-d\\TH:i:sP") }, r: function () { return this.toString() }, U: function () { return this.getTime() / 1e3 } }, $(document).ready(function () { $("form").keypress(function (e) { if (13 == e.which) return !1 }) }), window.setTimeout("BtnGrillaClick()", 3e3), $(document).ready(function () { $(".confirm").bind("click", function () { var e = "Esta seguro que desea continuar?"; null != $(this).attr("confirmMessage") && (e = $(this).attr("confirmMessage")), ConfirmMessage(e, this) }), $(".TextIndexer").bind("click", function () { $(".TextIndexer").each(function () { $(this).attr("confirmMessage") && MessageForTextArea($(this).attr("confirmMessage"), this) }) }) });