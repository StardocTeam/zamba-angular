var currFeeds; var feedTemplate = '<div id="zF_{0}" class="zFeedItem_R{1}"><span class="zFeedTime">{2}</span><span class="zFeedText">{3}</span></div>'; var refreshInterval; var linesCount; var contentHeight; function InitializeFeeds() {
    refreshInterval = parseInt(getRfInterval()); linesCount = parseInt(getFLCount()); contentHeight = (linesCount) * 1.563; if (getFView().toLowerCase() != "false") {
        var fDialog = $("#divZFeeds"); fDialog.dialog({ autoOpen: !1, position: 'left top', closeOnEscape: !1, draggable: !1, resizable: !1, show: "fast", open: SetDialogPreferences, width: 280 }); UpdateFeedsLoop(); var dHeader = fDialog.parent().find(":first-child"); dHeader.addClass("feedHeader"); var $newButton = $('<div id="feedMinimize" class="feedMinimize">&nbsp;</div>'); $(dHeader[0]).append($newButton); dHeader.find("#feedMinimize").click(function () {
            if ($(this).hasClass("feedMinimize")) { MinimizeFeedContent() }
            else { RestoreFeedContent() }
        })
    }
}
function SetDialogPreferences(event, ui) { var fDialog = $("#divZFeeds").parent(); fDialog.css("z-index", "1"); fDialog.css("padding", "0px") }
function MinimizeFeedContent() { var fDialog = $("#divZFeeds"); fDialog.height(1); fDialog.parent().css("padding", "0px"); fDialog.parent().css("z-index", "1"); $("#feedMinimize").removeClass("feedMinimize"); $("#feedMinimize").addClass("feedRestore") }
function RestoreFeedContent() { var fDialog = $("#divZFeeds"); fDialog.parent().css("padding", "0px"); fDialog.css("height", contentHeight + "em"); fDialog.dialog("open"); fDialog.parent().css("z-index", "1"); fDialog.css("height", contentHeight + "em"); $("#feedMinimize").removeClass("feedRestore"); $("#feedMinimize").addClass("feedMinimize") }
function UpdateFeedsLoop() { GetFeeds(); setTimeout("UpdateFeedsLoop();", refreshInterval) }
function GetFeeds() { var userId = GetUID(); $.ajax({ url: "../../Services/TaskService.asmx/GetUserFeeds", type: "POST", dataType: "json", cache: !0, data: "{userId:'" + userId + "'}", contentType: "application/json; charset=utf-8", success: GetFeedsComplete, error: GetFeedError }) }
function GetFeedsComplete(msg) {
    var getedFeeds = msg.d; var distinct = !1; var i = 0; if (currFeeds == null) { currFeeds = getedFeeds; distinct = !0 }
    else {
        while (!distinct && getedFeeds != null && getedFeeds[i] != null) {
            if (currFeeds[i].ID != getedFeeds[i].ID)
                distinct = !0; i++
        }
    }
    var newFeeds = ""; if (distinct && getedFeeds != null) {
        for (i = 0; getedFeeds[i] != null; i++) { var date = new Date(parseInt(getedFeeds[i].CreateDate.substr(6))); var parsedDate = $.datepicker.formatDate("dd/mm/y", date) + " " + date.getHours() + ":" + date.getMinutes(); newFeeds += feedTemplate.replace("{0}", getedFeeds[i].ID).replace("{1}", getedFeeds[i].Readed).replace("{2}", parsedDate).replace("{3}", getedFeeds[i].Text) }
        var fDialog = $("#divZFeeds"); fDialog[0].innerHTML = newFeeds; RestoreFeedContent(); currFeeds = getedFeeds
    }
}
function GetFeedError(e) { var fDialog = $("#divZFeeds"); fDialog[0].innerHTML = "<span>Ha ocurrido un error al obtener las novedades</span>"; RestoreFeedContent() }