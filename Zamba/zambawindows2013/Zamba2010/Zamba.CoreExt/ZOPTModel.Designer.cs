//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Zamba.CoreExt
{
    #region Contextos

    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    public partial class ZOPTEntities : ObjectContext
    {
        #region Constructores

        /// <summary>
        /// Inicializa un nuevo objeto ZOPTEntities usando la cadena de conexión encontrada en la sección 'ZOPTEntities' del archivo de configuración de la aplicación.
        /// </summary>
        public ZOPTEntities() : base("name=ZOPTEntities", "ZOPTEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Inicializar un nuevo objeto ZOPTEntities.
        /// </summary>
        public ZOPTEntities(string connectionString) : base(connectionString, "ZOPTEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Inicializar un nuevo objeto ZOPTEntities.
        /// </summary>
        public ZOPTEntities(EntityConnection connection) : base(connection, "ZOPTEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Métodos parciales

        partial void OnContextCreated();

        #endregion

        #region Propiedades de ObjectSet

        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<ZMachineConfig> ZMachineConfig
        {
            get
            {
                if ((_ZMachineConfig == null))
                {
                    _ZMachineConfig = base.CreateObjectSet<ZMachineConfig>("ZMachineConfig");
                }
                return _ZMachineConfig;
            }
        }
        private ObjectSet<ZMachineConfig> _ZMachineConfig;

        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Zopt> Zopt
        {
            get
            {
                if ((_Zopt == null))
                {
                    _Zopt = base.CreateObjectSet<Zopt>("Zopt");
                }
                return _Zopt;
            }
        }
        private ObjectSet<Zopt> _Zopt;

        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<ZUserConfig> ZUserConfig
        {
            get
            {
                if ((_ZUserConfig == null))
                {
                    _ZUserConfig = base.CreateObjectSet<ZUserConfig>("ZUserConfig");
                }
                return _ZUserConfig;
            }
        }
        private ObjectSet<ZUserConfig> _ZUserConfig;

        #endregion

        #region Métodos AddTo

        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet ZMachineConfig. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToZMachineConfig(ZMachineConfig zMachineConfig)
        {
            base.AddObject("ZMachineConfig", zMachineConfig);
        }

        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Zopt. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToZopt(Zopt zopt)
        {
            base.AddObject("Zopt", zopt);
        }

        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet ZUserConfig. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToZUserConfig(ZUserConfig zUserConfig)
        {
            base.AddObject("ZUserConfig", zUserConfig);
        }

        #endregion

    }

    #endregion

    #region Entidades

    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "ZambaModel", Name = "ZMachineConfig")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class ZMachineConfig : EntityObject
    {
        #region Método de generador

        /// <summary>
        /// Crear un nuevo objeto ZMachineConfig.
        /// </summary>
        /// <param name="machineName">Valor inicial de la propiedad MachineName.</param>
        /// <param name="name">Valor inicial de la propiedad name.</param>
        /// <param name="value">Valor inicial de la propiedad Value.</param>
        /// <param name="section">Valor inicial de la propiedad Section.</param>
        public static ZMachineConfig CreateZMachineConfig(global::System.String machineName, global::System.String name, global::System.String value, global::System.Decimal section)
        {
            ZMachineConfig zMachineConfig = new ZMachineConfig();
            zMachineConfig.MachineName = machineName;
            zMachineConfig.name = name;
            zMachineConfig.Value = value;
            zMachineConfig.Section = section;
            return zMachineConfig;
        }

        #endregion

        #region Propiedades simples

        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                if (_MachineName != value)
                {
                    OnMachineNameChanging(value);
                    ReportPropertyChanging("MachineName");
                    _MachineName = StructuralObject.SetValidValue(value, false, "MachineName");
                    ReportPropertyChanged("MachineName");
                    OnMachineNameChanged();
                }
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();

        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                if (_name != value)
                {
                    OnnameChanging(value);
                    ReportPropertyChanging("name");
                    _name = StructuralObject.SetValidValue(value, false, "name");
                    ReportPropertyChanged("name");
                    OnnameChanged();
                }
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Decimal Section
        {
            get
            {
                return _Section;
            }
            set
            {
                if (_Section != value)
                {
                    OnSectionChanging(value);
                    ReportPropertyChanging("Section");
                    _Section = StructuralObject.SetValidValue(value, "Section");
                    ReportPropertyChanged("Section");
                    OnSectionChanged();
                }
            }
        }
        private global::System.Decimal _Section;
        partial void OnSectionChanging(global::System.Decimal value);
        partial void OnSectionChanged();

        #endregion

    }

    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "ZambaModel", Name = "Zopt")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Zopt : EntityObject
    {
        #region Método de generador

        /// <summary>
        /// Crear un nuevo objeto Zopt.
        /// </summary>
        /// <param name="item">Valor inicial de la propiedad Item.</param>
        /// <param name="value">Valor inicial de la propiedad Value.</param>
        public static Zopt CreateZopt(global::System.String item, global::System.String value)
        {
            Zopt zopt = new Zopt();
            zopt.Item = item;
            zopt.Value = value;
            return zopt;
        }

        #endregion

        #region Propiedades simples

        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Item
        {
            get
            {
                return _Item;
            }
            set
            {
                if (_Item != value)
                {
                    OnItemChanging(value);
                    ReportPropertyChanging("Item");
                    _Item = StructuralObject.SetValidValue(value, false, "Item");
                    ReportPropertyChanged("Item");
                    OnItemChanged();
                }
            }
        }
        private global::System.String _Item;
        partial void OnItemChanging(global::System.String value);
        partial void OnItemChanged();

        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    }

    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "ZambaModel", Name = "ZUserConfig")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class ZUserConfig : EntityObject
    {
        #region Método de generador

        /// <summary>
        /// Crear un nuevo objeto ZUserConfig.
        /// </summary>
        /// <param name="userId">Valor inicial de la propiedad UserId.</param>
        /// <param name="name">Valor inicial de la propiedad name.</param>
        /// <param name="value">Valor inicial de la propiedad Value.</param>
        /// <param name="section">Valor inicial de la propiedad Section.</param>
        public static ZUserConfig CreateZUserConfig(global::System.Decimal userId, global::System.String name, global::System.String value, global::System.Decimal section)
        {
            ZUserConfig zUserConfig = new ZUserConfig();
            zUserConfig.UserId = userId;
            zUserConfig.name = name;
            zUserConfig.Value = value;
            zUserConfig.Section = section;
            return zUserConfig;
        }

        #endregion

        #region Propiedades simples

        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();

        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                if (_name != value)
                {
                    OnnameChanging(value);
                    ReportPropertyChanging("name");
                    _name = StructuralObject.SetValidValue(value, false, "name");
                    ReportPropertyChanged("name");
                    OnnameChanged();
                }
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Decimal Section
        {
            get
            {
                return _Section;
            }
            set
            {
                if (_Section != value)
                {
                    OnSectionChanging(value);
                    ReportPropertyChanging("Section");
                    _Section = StructuralObject.SetValidValue(value, "Section");
                    ReportPropertyChanged("Section");
                    OnSectionChanged();
                }
            }
        }
        private global::System.Decimal _Section;
        partial void OnSectionChanging(global::System.Decimal value);
        partial void OnSectionChanged();

        #endregion

    }

    #endregion

}
