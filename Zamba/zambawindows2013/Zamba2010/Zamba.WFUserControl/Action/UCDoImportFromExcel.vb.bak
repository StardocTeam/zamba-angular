Imports Zamba.Core
Imports Zamba.AppBlock
Imports Zamba.Data
Imports System.Data.OleDb
Imports System.IO

Public Class UCDoImportFromExcel
    Inherits ZRuleControl


#Region "Atributos"

    Private _currentRule As IDoImportFromExcel

#End Region

#Region "Constructor"

    Sub New(ByRef currentrule As IDoImportFromExcel, ByRef _wfPanelCircuit As IWFPanelCircuit)
        MyBase.New(currentrule, _wfPanelCircuit)
        Me.InitializeComponent()
        Me._currentRule = currentrule
        Me.loadValues()
    End Sub

#End Region


#Region "Metodos Privados"

    ''' <summary>
    ''' Carga los valores a la interfaz
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub loadValues()

        Me.txtFilePath.Text = Me._currentRule.File
        Me.txtsheetName.Text = Me._currentRule.SheetName
        Dim enumtype As Type = GetType(OfficeVersion)
        Me.txtVarName.Text = Me._currentRule.VarName
        Me.chkSaveCopyAs.Checked = Me._currentRule.SaveAs
        Me.txtDirPath.Text = Me._currentRule.SaveAsPath
        Me.txtSaveFileName.Text = Me._currentRule.SaveAsFileName

        For Each x As ExcelExportTypes In [Enum].GetValues(enumtype)
            Me.cmbVersion.Items.Add([Enum].GetName(enumtype, x))
        Next
        Me.cmbVersion.SelectedItem = Me.cmbVersion.Items(Me.cmbVersion.Items.IndexOf(Me._currentRule.ExcelVersion.ToString))
    End Sub

#End Region

    ''' <summary>
    ''' Visualiza los datos del excel.
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    ''' <History>
    '''     [Ezequiel]    12/11/09 - Created
    ''' </history>
    Private Sub btnPreview_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnPreview.Click
        Try

            Me.grdTableCols.DataSource = Me.GetExcelData

        Catch ex As Exception
            ZClass.raiseerror(ex)
        End Try
    End Sub


    ''' <summary>
    ''' Muestra el dialogo de seleccion de archivo excel
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    ''' <History>
    '''     [Ezequiel]    12/11/09 - Created
    ''' </history>
    Private Sub btnBrowse_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnBrowse.Click
        Try
            Dim Dlg As New OpenFileDialog
            Dlg.DefaultExt = "*.xls"
            Dlg.ShowDialog()
            Me.txtFilePath.Text = Dlg.FileName
        Catch ex As Exception
            Zamba.Core.ZClass.raiseerror(ex)
        End Try
    End Sub

    ''' <summary>
    ''' Obtiene los datos del excel.
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    ''' <History>
    '''     [Ezequiel]    12/11/09 - Created
    ''' </history>
    Private Function GetExcelData() As DataTable
        Dim connectionString As String = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" & Me.txtFilePath.Text & ";Extended Properties=" & Chr(34) & "Excel 8.0;HDR=Yes;" & Chr(34) & ";"

        Dim strSQL As String = "SELECT * FROM [" & Me.txtsheetName.Text.Trim & "$]"
        Dim dTable As New DataTable()
        Using excelConnection As OleDbConnection = New OleDbConnection(connectionString)
            excelConnection.Open()
            Dim dbCommand As OleDbCommand = New OleDbCommand(strSQL, excelConnection)
            Dim dataAdapter As OleDbDataAdapter = New OleDbDataAdapter(dbCommand)
            dataAdapter.Fill(dTable)
        End Using
        Return dTable
    End Function


    ''' <summary>
    ''' Guarda los parametros de la regla
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    ''' <History>
    '''     [Ezequiel]    12/11/09 - Created
    ''' </history>
    Private Sub BtnSave_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles BtnSave.Click
        Try
            Me._currentRule.ExcelVersion = [Enum].Parse(GetType(OfficeVersion), Me.cmbVersion.SelectedItem.ToString)
            Me._currentRule.File = Me.txtFilePath.Text
            Me._currentRule.SheetName = Me.txtsheetName.Text
            Me._currentRule.VarName = Me.txtVarName.Text
            WFRulesBusiness.UpdateParamItem(Rule.ID, 0, Me._currentRule.File)
            WFRulesBusiness.UpdateParamItem(Rule.ID, 1, Me._currentRule.ExcelVersion)
            WFRulesBusiness.UpdateParamItem(Rule.ID, 2, Me._currentRule.SheetName)
            WFRulesBusiness.UpdateParamItem(Rule.ID, 3, Me._currentRule.VarName)

            If Me.chkSaveCopyAs.Checked AndAlso (Me.txtDirPath.Text.Trim() <> String.Empty AndAlso Me.txtSaveFileName.Text.Trim() <> String.Empty) Then


                Me._currentRule.SaveAs = Me.chkSaveCopyAs.Checked
                Me._currentRule.SaveAsPath = Me.txtDirPath.Text
                Me._currentRule.SaveAsFileName = Me.txtSaveFileName.Text

                WFRulesBusiness.UpdateParamItem(Rule.ID, 4, Me._currentRule.SaveAs)
                WFRulesBusiness.UpdateParamItem(Rule.ID, 5, Me._currentRule.SaveAsPath)
                WFRulesBusiness.UpdateParamItem(Rule.ID, 6, Me._currentRule.SaveAsFileName)
            Else

                MsgBox("Los datos están incompletos", MsgBoxStyle.OkOnly + MsgBoxStyle.Critical, "Error al guardar...")


            End If
            UserBusiness.Rights.SaveAction(Rule.ID, Zamba.Core.ObjectTypes.WFRules, Zamba.Core.RightsType.Edit, "Se editaron los datos de la regla " & Rule.Name & "(" & Rule.ID & ")")


        Catch ex As Exception
            ZClass.raiseerror(ex)
        End Try
    End Sub

    Private Sub CheckBox1_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkSaveCopyAs.CheckedChanged

        If chkSaveCopyAs.Checked Then
            txtSaveFileName.Enabled = True
            txtDirPath.Enabled = True
        Else
            txtSaveFileName.Enabled = False
            txtDirPath.Enabled = False

        End If

    End Sub

    Private Sub btnBrowse2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnBrowse2.Click
        Try
            Dim Dlg As FolderBrowserDialog = New FolderBrowserDialog()
            If Dlg.ShowDialog() = DialogResult.OK Then
                Me.txtDirPath.Text = Dlg.SelectedPath
            End If
        Catch ex As Exception
            Zamba.Core.ZClass.raiseerror(ex)
        End Try
    End Sub
End Class
