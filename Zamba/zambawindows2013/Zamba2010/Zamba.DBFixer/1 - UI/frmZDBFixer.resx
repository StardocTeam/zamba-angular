<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nG9mZmZZa2trR21tbTVvb28hc3NzDRMTE48MDAz/GRkZ/ygoKP85OTn/SUlJ/1VVVf9hYmL/kHZ2//ex
        sf//srL/9Y6O/6tsbP/CdXX/8oWF/yUTE24AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgMDA7MMDAz3HBwc/zMzM/9JSUn/XFxc/2lp
        af+WfX3/9q+v//+xsf/yjIz/74WF//dzc//yhYX/JRMTbwAAAAAAAAAAAAAAAAAAAAAaGhoCGhoaBRoa
        GgcaGhoIGhoaCBoaGggaGhoIGhoaCBoaGggaGhoIGhoaCBoaGggaGhoIGhoaCBoaGiEVFRV3ERER1SAg
        IP46Ojr/Wlpa/5d8fP/1ra3//7Cw//icnP//mpr//5aW//OUlP8rHh6IGhoaDhoaGggaGhoIGhoaCDQ0
        NCc0NDRpNDQ0fTQ0NH40NDR+NDQ0fjQ0NH40NDR+NDQ0fjQ0NH40NDR+NDQ0fjQ0NH40NDR+NDQ0fjQ0
        NH40NDR/JycnoiEhIdkjIyP5ak1N//SwsP//u7v//6ys//+urv//vb3+mXNz+TQxMa40NDSDNDQ0fjQ0
        NH40NDR+ioWA04uGgf1jTzj+Y084/mNPOP5jTzj+empb/o6Efv6XlZT+jIB3/piYl/6Og3z+hnhu/mRQ
        Of5kUDn+ZFA5/mRQOf5kUDn+ZFA5/oV4bf6dhHv/7L61//LJwP/yxr3/7MW8/5aAcv9kUTr+mJiX/mhW
        Qf6MiIP+dWla/mNQOf68poz+8/Ht/nJABP5wPQD+cD0A/nA9AP6shFz+4si2/vr28/7dvab+/fv6/uHF
        sv7LqYz+p4hi/qqMZ/6jhF/+qoxp/qKCW/6sj23+y6mM/t2+p/7ewKr+3r+o/t/BrP7dvab+to9r/nI/
        BP77+/r+fU0V/t3Rw/6gf1j+cD0A/pZxRv79/v7+j2g6/nA9AP5wPQD+cD0A/qyEXP7gxLD++/r5/vDm
        3v79/fz+4cWy/supjP60mnr+uJ+B/rCWdv64n4P+rpNx/rqjh/7LqYz+4MOu/v7+/f7t3tT++/j2/uPL
        uf62j2v+cD0B/vDs5/7VyLn+7Obf/qB/WP5wPQD+e0wU/vLv6/63noD+cD0A/nA9AP5wPQD+rIRc/t29
        pv7ewKr+3r6n/v38+/7hxbL+y6mM/rSaev64n4H+sJZ2/rifg/6uk3H+uqOH/supjP7gw67+/v7+/t6/
        qf738e3+5tHB/raPa/5xPQD+dUQK/nVECf7d0cP+oH9Y/nA9AP56ShH+zbyo/t3Sxv5wPQD+cD0A/nA9
        AP6shFz+5Mu5/vn08f7dvab+/fz7/uHFsv7LqYz+tJp6/rifgf6wlnb+uJ+D/q6Tcf66o4f+y6mM/uDD
        rv7+/v7+3r+p/vfx7f7m0cH+to9r/nVDCf75+Pf+fE0V/t3Rw/6gf1j+cD0A/npKEf6mh2P++/v6/npL
        E/5wPQD+cD0A/qyEXP7gxLD++/n3/vLn3/77+fj+3sCr/supjP60mnr+uJ+B/rCWdv64n4P+rpNx/rqj
        h/7LqYz+4MOu/v7+/v7ev6n+9/Ht/ubRwf62j2v+cT4B/u3o4v7QwK3+8Ozn/o5mN/5wPQD+ekoR/n9T
        Hv7+/f3+nn1V/nA9AP5wPQD+rIRc/t29pv7fwq3+4se1/t/BrP7dvab+y6mM/rSaev64n4H+sJZ2/rif
        g/6uk3H+uqOH/supjP7gw67+/v7+/t6/qf738e3+5tHB/raPa/5wPQD+d0YN/olgL/5+UBr+cD0A/nA9
        AP6HXi3+f1Me/uvl3/7Gs5z+cD0A/nA9AP6shFz+3b2m/t29pv7dvab+3b2m/t29pv7LqYz+tJp6/tbJ
        uP7TxLP+1sm5/tHDsf63n4H+y6mM/uDDrv7+/v7+6tfJ/vr28/7lz77+to9r/nA9AP5wPQD+cD0A/nA9
        AP5wPQD+cD0A/v7+/v7+/v7+/v7+/uvm4P54SA/+eEgO/rGKZf7gwav+4MGr/uDBq/7gwav+4MGr/s6u
        k/6KYC/+kGo8/qOCXP6MYjL+pINe/oNXI/7PrpP+4say/v7+/v7lzbz+6NLD/uDCrP66lXP+eUgP/nlI
        D/55SA/+eUgP/nlID/55SA/+//AP//hgB//4AAB/+AAAH/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA//8AAPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>