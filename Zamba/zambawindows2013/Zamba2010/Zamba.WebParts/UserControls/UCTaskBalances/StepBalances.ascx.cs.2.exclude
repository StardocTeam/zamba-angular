using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Collections.Generic;
using Zamba.Core;
using Zamba.Services;
//using Zamba.WFBusiness;
using Microsoft.Reporting.WebForms;

public partial class UserControls_StepBalances : System.Web.UI.UserControl
{

    #region EVENTOS
    protected void Page_Load(object sender, EventArgs e)
    {
        if (cmbEtapas.Items.Count == 0)
        {
            InitializesComponents();
        }
        rpvGrdStepsStates.Visible = false;
    }

    protected void DropDownList1_SelectedIndexChanged(object sender, EventArgs e)
    {

        cmbEtapas.Items.Clear();
        LoadSteps(Int64.Parse(cmbWorkflows.SelectedValue.ToString()));
    }

    protected void DropEtapas_SelectedIndexChanged(object sender, EventArgs e)
    {
        ShowReports();
    }

    private void ShowReports()
    {
        if (!String.IsNullOrEmpty(cmbEtapas.SelectedValue))
        {
            DsStepBalance dsTyped = new DsStepBalance();

            DsStepBalance.dtStepBalanceRow dr1 = dsTyped.dtStepBalance.NewdtStepBalanceRow();
            DsStepBalance.dtStepBalanceRow dr2 = dsTyped.dtStepBalance.NewdtStepBalanceRow();
            DsStepBalance.dtStepBalanceRow dr3 = dsTyped.dtStepBalance.NewdtStepBalanceRow();
            DsStepBalance.dtStepBalanceRow dr4 = dsTyped.dtStepBalance.NewdtStepBalanceRow();
            DsStepBalance.dtStepBalanceRow dr5 = dsTyped.dtStepBalance.NewdtStepBalanceRow();
            DsStepBalance.dtStepBalanceRow dr6 = dsTyped.dtStepBalance.NewdtStepBalanceRow();

            dr1.Step_Task_State = "DesAsignada";
            dr2.Step_Task_State = "Inicializadas";
            dr3.Step_Task_State = "En Ejecución";
            dr4.Step_Task_State = "Finalizada";
            dr5.Step_Task_State = "Derivada";
            dr6.Step_Task_State = "Rechazada";
            
            DataSet ds = Tasks.GetTasksCountByStepGroupByStates(Int64.Parse(cmbEtapas.SelectedValue));
            //diego : null reference!
            if (null != ds.Tables[0] && ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    switch (Int32.Parse( row[2].ToString() ))
	                {
                        case 0:
                            dr1.Step_Task_Count = Int32.Parse(row[1].ToString()); break;
                        case 1:
                            dr2.Step_Task_Count = Int32.Parse(row[1].ToString()); break;
                        case 2:
                            dr3.Step_Task_Count = Int32.Parse(row[1].ToString()); break;
                        case 3:
                            dr4.Step_Task_Count = Int32.Parse(row[1].ToString()); break;
                        case 4:
                            dr5.Step_Task_Count = Int32.Parse(row[1].ToString()); break;
                        case 5:
                            dr6.Step_Task_Count = Int32.Parse(row[1].ToString()); break;
                        default: ; break;
                    }

                    
                }

                dsTyped.Tables[0].Rows.Add(dr1);
                dsTyped.Tables[0].Rows.Add(dr2);
                dsTyped.Tables[0].Rows.Add(dr3);
                dsTyped.Tables[0].Rows.Add(dr4);
                dsTyped.Tables[0].Rows.Add(dr5);
                dsTyped.Tables[0].Rows.Add(dr6);
                
                dsTyped.AcceptChanges();

                this.rpvStepsStates.LocalReport.DataSources.Clear();
                this.rpvGrdStepsStates.LocalReport.DataSources.Clear();
                ReportDataSource rptDatasource = new ReportDataSource("DsStepBalance_dtStepBalance", dsTyped.Tables[0]);
                if (rdbVerGrafico.Checked)
                {
                    this.rpvStepsStates.LocalReport.DataSources.Add(rptDatasource);
                    rpvStepsStates.Visible = true;
                    rpvGrdStepsStates.Visible = false;
                }
                else
                {
                    this.rpvGrdStepsStates.LocalReport.DataSources.Add(rptDatasource);
                    rpvGrdStepsStates.Visible = true;
                    rpvStepsStates.Visible = false;
                }

            }
        }
    }

    #endregion

    #region METODOS

    public void InitializesComponents()
    {
        List<IWorkFlow> WFList = new List<IWorkFlow>();

        WFList = Workflow.GetWorkflows();


        foreach (IWorkFlow CurrentWorkflow in WFList)
            cmbWorkflows.Items.Add(new ListItem(CurrentWorkflow.Name, CurrentWorkflow.ID.ToString()));
        if (cmbWorkflows.Items.Count > 0)
        {
            if (null != cmbWorkflows.SelectedValue)
            {
                LoadSteps(Int64.Parse(cmbWorkflows.SelectedValue.ToString()));
            }


        }
    }

    private void LoadSteps(Int64 workflowId)
    {
        List<IWFStep> StepList = new List<IWFStep>();//usar el metodo que corresponda de etapas
        StepList = Zamba.Services.Steps.GetAllSteps(workflowId);

        foreach (IWFStep CurrentStep in StepList)
            cmbEtapas.Items.Add(new ListItem(CurrentStep.Name, CurrentStep.ID.ToString()));

        ShowReports();


    }

    #endregion

    protected void rdbVerTabla_CheckedChanged(object sender, EventArgs e)
    {
        rdbVerGrafico.Checked = false;
        ShowReports();

    }
    protected void rdbVerGrafico_CheckedChanged(object sender, EventArgs e)
    {
        rdbVerTabla.Checked = false;
        ShowReports();
    }
}
